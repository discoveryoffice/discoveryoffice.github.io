<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Vue学习笔记（安装脚手架）</title>
      <link href="/courage/posts/72ed8eade779/"/>
      <url>/courage/posts/72ed8eade779/</url>
      
        <content type="html"><![CDATA[<p>本篇是关于学习Vue脚手架的学习笔记</p><p>首先来认识什么是Vue脚手架</p><h2 id="Vue-CLI"><a href="#Vue-CLI" class="headerlink" title="Vue CLI"></a>Vue CLI</h2><p><img src="/courage/images/pasted-157.png" alt="upload successful"></p><h4 id="官方介绍："><a href="#官方介绍：" class="headerlink" title="官方介绍："></a>官方介绍：</h4><p>Vue CLI 是一个基于 Vue.js 进行快速开发的完整系统。<br>通过 @vue&#x2F;cli 实现的交互式的项目脚手架。<br>通过 @vue&#x2F;cli + @vue&#x2F;cli-service-global 实现的零配置原型开发。<br>一个运行时依赖 (@vue&#x2F;cli-service)，该依赖：<br>1.可升级；<br>2.基于 webpack 构建，并带有合理的默认配置；<br>3.可以通过项目内的配置文件进行配置；<br>4.可以通过插件进行扩展。<br>5.一个丰富的官方插件集合，集成了前端生态中最好的工具。<br>6.一套完全图形化的创建和管理 Vue.js 项目的用户界面。</p><p>简单来说，Vue CLI是一套已经包含核心功能和标准文件夹结构的半成品项目源代码，它的优点是标准化，极其便于协作，避免重复搭结构，降低学习成本。在今后所有的项目和新技术，基本都是在脚手架基础上开发的。其中集成了官方的插件，也可以引入第三方的插件进行页面的网页的构建。</p><p>接下来看看实际的操作步骤</p><h2 id="安装Vue脚手架前的准备工作"><a href="#安装Vue脚手架前的准备工作" class="headerlink" title="安装Vue脚手架前的准备工作"></a>安装Vue脚手架前的准备工作</h2><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p>首先，如果想要安装Vue的脚手架系统，需要在电脑上安装node.js，并使用其中自带的npm工具对Vue脚手架进行安装操作。<br>相关的Node.js的安装教程，请参考以下文章：<br>Windows版本：<br><a href="http://t.csdn.cn/iTU5e">http://t.csdn.cn/iTU5e</a><br>Linux版本：<br><a href="http://t.csdn.cn/jqQqo">http://t.csdn.cn/jqQqo</a><br>Mac版本：<br><a href="http://t.csdn.cn/89nHy">http://t.csdn.cn/89nHy</a></p><h3 id="更换Node-js的源地址"><a href="#更换Node-js的源地址" class="headerlink" title="更换Node.js的源地址"></a>更换Node.js的源地址</h3><p>为了加快安装速度，我们需要将npm的本身的源地址更换为淘宝镜像的源地址。<br>打开命令行窗口，全局切换镜像：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry http://registry.npm.taobao.org/</span><br></pre></td></tr></table></figure><p>查看镜像使用状态：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm get registry</span><br></pre></td></tr></table></figure><p>当npm中显示为淘宝镜像的源后，就可以继续操作了</p><h2 id="开始安装Vue脚手架"><a href="#开始安装Vue脚手架" class="headerlink" title="开始安装Vue脚手架"></a>开始安装Vue脚手架</h2><p>安装完Node.js后，我们就可以使用npm命令进行Vue脚手架的安装<br>Vue脚手架的安装命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue/cli</span><br></pre></td></tr></table></figure><p>等待安装完成后，使用以下命令查看Vue的安装版本，若无法查看，则表明未安装成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue --version</span><br></pre></td></tr></table></figure><p>安装Vue脚手架完毕后，可以自己在电脑上找一个适合的位置，然后创建一个专门放置脚手架文件的文件夹，文件夹名可随意。</p><p>之后打开命令行窗口，将命令行的路径改为自己专门放置脚手架文件的目录中后，执行以下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue create hello-world</span><br></pre></td></tr></table></figure><p>这条命令的含义是，创建一个名为hello-word的Vue脚手架项目。<br>当然，项目名可以自己随意命名。</p><p>安装过程中进入了这个界面时，我们有三个选项可以选择，分别是：<br>1.默认安装Vue3<br>2.默认安装Vue2<br>3.自助选择安装选项<br><img src="/courage/images/pasted-152.png" alt="upload successful"></p><p>前两个选项可一键安装Vue2或Vue3的项目文件，你也可以根据自身需要选择第三个选项，设置脚手架的其他配置选项，进入以下页面：<br><img src="/courage/images/pasted-153.png" alt="upload successful"><br>在这个步骤中，我们选择默认一键安装Vue2的脚手架项目文件。</p><p>安装完成后，可打开编译器查看项目文件夹下的文件，此处推荐使用VsCode进行项目文件的查看。<br><img src="/courage/images/pasted-154.png" alt="upload successful"></p><h2 id="启动Vue脚手架"><a href="#启动Vue脚手架" class="headerlink" title="启动Vue脚手架"></a>启动Vue脚手架</h2><p>以上步骤全部完成后，我们可以在当前项目文件夹的路径中启动命令行，并运行以下命令启动脚手架文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run serve</span><br></pre></td></tr></table></figure><p>当出现以下情况时，证明你项目文件启动成功<br><img src="/courage/images/pasted-155.png" alt="upload successful"></p><p>你可以在浏览器中访问Local或Network的地址，当浏览器中出现以下画面时证明脚手架文件启动成功！<br><img src="/courage/images/pasted-156.png" alt="upload successful"></p><p>将以上步骤完全实施后，安装Vue脚手架的步骤到此结束。<br>其他的详细配置可参考官方文档</p><p>如果你觉得这篇文章比较好或者解决了你的问题，或者有其他疑问的的话，请留下你的评论吧！</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> Vue CLI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue学习笔记（基础部分）</title>
      <link href="/courage/posts/153a7b00a80e/"/>
      <url>/courage/posts/153a7b00a80e/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="关于Vue"><a href="#关于Vue" class="headerlink" title="关于Vue"></a>关于Vue</h1><p>什么是 Vue？<br>Vue (发音为 &#x2F;vjuː&#x2F;，类似 view) 是一款用于构建用户界面的 JavaScript 框架。它基于标准 HTML、CSS 和 JavaScript 构建，并提供了一套声明式的、组件化的编程模型，帮助你高效地开发用户界面。无论是简单还是复杂的界面，Vue 都可以胜任。<br><img src="/courage/images/pasted-151.png" alt="upload successful"></p><h1 id="笔记开始"><a href="#笔记开始" class="headerlink" title="笔记开始"></a>笔记开始</h1><h2 id="初识Vue"><a href="#初识Vue" class="headerlink" title="初识Vue"></a>初识Vue</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;初识vue&lt;/title&gt;</span><br><span class="line">    &lt;!-- 引入Vue --&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- 注意：</span><br><span class="line"></span><br><span class="line">        想让Vue工作，就必须创建一个Vue实例，且要传入一个配置对象</span><br><span class="line">        root容器里的代码依然符合html规范，只不过混入了一些特殊的Vue语法</span><br><span class="line">        root容器里的代码被称为Vue模板</span><br><span class="line">        Vue实例与容器是一一对应的</span><br><span class="line">        真实开发中只有一个Vue实例，并且会配合着组件一起使用</span><br><span class="line">        &#123;&#123;xxx&#125;&#125;中的xxx要写js表达式，且xxx可以自动读取到data中的所有属性</span><br><span class="line">        一旦data中的数据发生变化，那么模板中用到该数据的地方也会自动更新 --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 准备好一个容器 --&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;h1&gt;Hello！&#123;&#123;name&#125;&#125;!&lt;/h1&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        Vue.config.productionTip = false // 阻止vue在启动时生成生产提示</span><br><span class="line">        new Vue(&#123;</span><br><span class="line">            el: &#x27;#root&#x27;, //el用于指定当前Vue实例为哪个容器服务，值通常为css选择器字符串</span><br><span class="line">            data: &#123; //data用于存储数据，数据共el所指定的容器去使用</span><br><span class="line">                name: &#x27;北京大学&#x27;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="el与data的不同写法"><a href="#el与data的不同写法" class="headerlink" title="el与data的不同写法"></a>el与data的不同写法</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;el与data的两种写法&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;h1&gt;Hello,&#123;&#123;name&#125;&#125;!&lt;/h1&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        Vue.config.productionTip = false</span><br><span class="line">            //el的两种写法：</span><br><span class="line">            // const vm = new Vue(&#123;</span><br><span class="line">            //     // el:&#x27;#root&#x27;, //第一种写法</span><br><span class="line">            //     data:&#123;</span><br><span class="line">            //         name:&#x27;JOJO&#x27;</span><br><span class="line">            //     &#125;</span><br><span class="line">            // &#125;)</span><br><span class="line">            // vm.$mount(&#x27;#root&#x27;)//第二种写法</span><br><span class="line"></span><br><span class="line">        //data的两种写法：</span><br><span class="line">        new Vue(&#123;</span><br><span class="line">            el: &#x27;#root&#x27;,</span><br><span class="line">            //data的第一种写法：对象式</span><br><span class="line">            // data:&#123;</span><br><span class="line">            //     name:&#x27;JOJO&#x27;</span><br><span class="line">            // &#125;</span><br><span class="line">            //data的第二种写法：函数式</span><br><span class="line">            data() &#123;</span><br><span class="line">                return &#123;</span><br><span class="line">                    name: &#x27;北京大学&#x27;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="MVVM模型"><a href="#MVVM模型" class="headerlink" title="MVVM模型"></a>MVVM模型</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;mvvm&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;!-- </span><br><span class="line">            总结：</span><br><span class="line"></span><br><span class="line">        data中所有的属性，最后都出现在了vm身上</span><br><span class="line">        vm身上所有的属性 及 Vue原型身上所有的属性，在Vue模板中都可以直接使用 </span><br><span class="line">            总结：</span><br><span class="line"></span><br><span class="line">        Vue中的数据代理通过vm对象来代理data对象中属性的操作（读/写）</span><br><span class="line">        Vue中数据代理的好处：更加方便的操作data中的数据</span><br><span class="line">    基本原理：</span><br><span class="line">        通过object.defineProperty()把data对象中所有属性添加到vm上。</span><br><span class="line">        为每一个添加到vm上的属性，都指定一个getter/setter。</span><br><span class="line">        在getter/setter内部去操作（读/写）data中对应的属性。</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    --&gt;</span><br><span class="line">        &lt;!-- view --&gt;</span><br><span class="line">        &lt;h2&gt;名称：&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;h2&gt;战队：&#123;&#123;rank&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;h2&gt;测试：&#123;&#123;$options&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        Vue.config.productionTip = false</span><br><span class="line">        new Vue(&#123; //viewmodel</span><br><span class="line">            el: &#x27;#root&#x27;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                name: &#x27;fly&#x27;, //model</span><br><span class="line">                rank: &#x27;QGhappy&#x27;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="插值语法"><a href="#插值语法" class="headerlink" title="插值语法"></a>插值语法</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;vue模板语法&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- Vue模板语法包括两大类：</span><br><span class="line"></span><br><span class="line">    插值语法：</span><br><span class="line"></span><br><span class="line">    功能：用于解析标签体内容</span><br><span class="line">    写法：&#123;&#123;xxx&#125;&#125;，xxx是js表达式，且可以直接读取到data中的所有区域</span><br><span class="line">    指令语法：</span><br><span class="line"></span><br><span class="line">    功能：用于解析标签（包括：标签属性、标签体内容、绑定事件…）</span><br><span class="line">    举例：&lt;a v-bind:href=&quot;xxx&quot;&gt;或简写为&lt;a :href=&quot;xxx&quot;&gt;，xxx同样要写js表达式，且可以直接读取到data中的所有属性</span><br><span class="line">    备注：Vue中有很多的指令，且形式都是v-???，此处我们只是拿v-bind举个例子 --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;h1&gt;插值语法&lt;/h1&gt;</span><br><span class="line">        &lt;h3&gt;你好，&#123;&#123;name&#125;&#125;&lt;/h3&gt;</span><br><span class="line">        &lt;hr&gt;</span><br><span class="line">        &lt;h1&gt;指令语法&lt;/h1&gt;</span><br><span class="line">        &lt;a v-bind:href=&quot;url&quot;&gt;清华大学欢迎你&lt;/a&gt;&lt;br&gt;</span><br><span class="line">        &lt;a :href=&quot;url&quot;&gt;清华大学欢迎你&lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        Vue.config.productionTip = false</span><br><span class="line">        new Vue(&#123;</span><br><span class="line">            el: &#x27;#root&#x27;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                name: &#x27;清华大学&#x27;,</span><br><span class="line">                url: &#x27;https://www.tsinghua.edu.cn/&#x27;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="数据绑定"><a href="#数据绑定" class="headerlink" title="数据绑定"></a>数据绑定</h2><h3 id="数据绑定的简单演示"><a href="#数据绑定的简单演示" class="headerlink" title="数据绑定的简单演示"></a>数据绑定的简单演示</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;数据绑定&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- 总结：</span><br><span class="line"></span><br><span class="line">    Vue中有2种数据绑定的方式：</span><br><span class="line"></span><br><span class="line">        单向绑定（v-bind）：数据只能从data流向页面</span><br><span class="line">        双向绑定（v-model）：数据不仅能从data流向页面，还可以从页面流向data</span><br><span class="line">    备注：</span><br><span class="line"></span><br><span class="line">        双向绑定一般都应用在表单类元素上（如：&lt;input&gt;、&lt;select&gt;、&lt;textarea&gt;等）</span><br><span class="line">        v-model:value可以简写为v-model，因为v-model默认收集的就是value值</span><br><span class="line"></span><br><span class="line">        v-model是通过value和input之间的关系进行实现的</span><br><span class="line">        v-model如果写在子组件标签的话，就可以沟通子组件中的input标签，实现父子之间的数据同步</span><br><span class="line"></span><br><span class="line">        在input标签内使用@input的原生dom方法时，绑定某一个data中的数据值后，把input的$event.target.value赋值到数据值中，可以实现数据的双向绑定，</span><br><span class="line">        例如：@input=&quot;msg=$event.target.value&quot;</span><br><span class="line"></span><br><span class="line">        @input写在组件标签中时，就是自定义事件</span><br><span class="line">        </span><br><span class="line">        例子：</span><br><span class="line">        此为父组件中的组件标签，:value=&quot;a&quot;用于传输数据值给子组件，@input=&quot;a=$event&quot;的意思是将传过来的$event的值放入data的a中，修改a的数据</span><br><span class="line">        &lt;SearchSelector @trademarkInfo=&quot;trademarkInfo&quot; @attrInfo=&quot;attrInfo&quot; :value=&quot;a&quot; @input=&quot;a=$event&quot;/&gt;</span><br><span class="line">        其中，放入数据的阶段也可以换成v-model的形式</span><br><span class="line">        &lt;SearchSelector @trademarkInfo=&quot;trademarkInfo&quot; @attrInfo=&quot;attrInfo&quot; v-model=&quot;a&quot;/&gt;</span><br><span class="line">        ---------------------------------</span><br><span class="line">        此为子组件的input标签，在使用props接收数据value后，使用:value=&quot;value&quot;展示数据,@input=&quot;$emit(&#x27;input&#x27;,$event.target.value)用来发送数据到父组件中，这也是组件标签中@input和v-model修改数据的依据</span><br><span class="line">        &lt;input type=&quot;text&quot; :value=&quot;value&quot; @input=&quot;$emit(&#x27;input&#x27;,$event.target.value)&quot;&gt;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        sync修饰符</span><br><span class="line">        sync修饰符是组件通信方式的一种</span><br><span class="line">        可以实现父子之间的数据同步</span><br><span class="line">        在父组件的组件标签上写上例如:money.sync的字样,代表父组件字符串传递props[&#x27;money&#x27;]，给当前子组件确定一个自定义事件(@update:money)</span><br><span class="line">        子组件中，在button中写上@click=&quot;$emit&#123;&#x27;update:money&#x27;,money-100&#125;&quot;来响应父组件中sync方法即可</span><br><span class="line"></span><br><span class="line">        $attrs和$listeners可以实现父子组件通信</span><br><span class="line">        在子组件标签上可以使用 v-bind=&quot;$attrs&quot;获取父组件传过来的属性值(此处的v-bind不能够简写成:，否则方法不生效),而使用v-on=&quot;$liseners&quot;能够响应父组件中设置的自定义事件(此处v-on不能够替换为@，否则方法不生效)</span><br><span class="line">        想要实现当鼠标悬浮在按钮上显示提示信息，就是将a标签包裹住button标签，然后在a标签内接收父组件传过来的相应的信息即可</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        $children和$parent</span><br><span class="line">        1.$ref可以获取到某一个组件的子组件，并可以获取其数据信息进行加工修改，例如$ref.money</span><br><span class="line">        2.$children组件实例的属性，可以获取当前组件的全部的子组件，并可以获取它们的数据信息，通过forEach遍历对数据信息进行逐一的加工修改,例如this.$children.forEach(item=&gt;(item.money+=100))</span><br><span class="line">        (注意：不能够使用this.$children[0].money的形式，因为不能够确定这个数组的第0项是否为正确的数据）</span><br><span class="line">        3.$parent可以获取当前组件的父组件，可以用来操作父组件的数据值，例如：this.$parent.money+=50</span><br><span class="line"></span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        单向数据绑定：&lt;input type=&quot;text&quot; v-bind:value=&quot;name&quot;&gt;&lt;br&gt; 双向数据绑定：</span><br><span class="line">        &lt;input type=&quot;text&quot; v-model:value=&quot;name&quot;&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        Vue.config.productionTip = false</span><br><span class="line">        new Vue(&#123;</span><br><span class="line">            el: &#x27;#root&#x27;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                name: &#x27;张三&#x27;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="例子：收集表单数据"><a href="#例子：收集表单数据" class="headerlink" title="例子：收集表单数据"></a>例子：收集表单数据</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;!-- 总结：</span><br><span class="line"></span><br><span class="line">                收集表单数据：</span><br><span class="line"></span><br><span class="line">                若：&lt;input type=&quot;text&quot;/&gt;，则v-model收集的是value值，用户输入的内容就是value值</span><br><span class="line">                若：&lt;input type=&quot;radio&quot;/&gt;，则v-model收集的是value值，且要给标签配置value属性</span><br><span class="line">                若：&lt;input type=&quot;checkbox&quot;/&gt;</span><br><span class="line">                没有配置value属性，那么收集的是checked属性（勾选 or 未勾选，是布尔值）</span><br><span class="line">                配置了value属性：</span><br><span class="line">                v-model的初始值是非数组，那么收集的就是checked（勾选 or 未勾选，是布尔值）</span><br><span class="line">                v-model的初始值是数组，那么收集的就是value组成的数组</span><br><span class="line">                v-model的三个修饰符：</span><br><span class="line"></span><br><span class="line">                lazy：失去焦点后再收集数据</span><br><span class="line">                number：输入字符串转为有效的数字</span><br><span class="line">                trim：输入首尾空格过滤</span><br><span class="line">                --&gt;</span><br><span class="line">        &lt;form @submit.prevent=&quot;demo&quot;&gt;</span><br><span class="line">            &lt;!-- v-model.trim用来排除文段之外的空格 --&gt;</span><br><span class="line">            账号：&lt;input type=&quot;text&quot; v-model.trim=&quot;userinfo.account&quot;&gt;&lt;br/&gt;&lt;br/&gt; 密码：</span><br><span class="line">            &lt;input type=&quot;password&quot; v-model=&quot;userinfo.password&quot;&gt; &lt;br/&gt;&lt;br/&gt; 年龄：</span><br><span class="line">            &lt;!--在输入框后输入数字，vue会解读成文本，这会跟数据库的数据类型起冲突，所以可以使用v-model的number修饰符来解决这个问题--&gt;</span><br><span class="line">            &lt;!-- type=&quot;number&quot; v-model.number一般同时使用 --&gt;</span><br><span class="line">            &lt;input type=&quot;number&quot; v-model.number=&quot;userinfo.age&quot;&gt;</span><br><span class="line">            &lt;br/&gt;&lt;br/&gt;性别： 男</span><br><span class="line">            &lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;male&quot; v-model=&quot;userinfo.sex&quot;&gt; 女</span><br><span class="line">            &lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;female&quot; v-model=&quot;userinfo.sex&quot;&gt;</span><br><span class="line"></span><br><span class="line">            &lt;br/&gt;</span><br><span class="line">            &lt;br/&gt; 学习</span><br><span class="line">            &lt;!--checkbox想要在vue中返回值，需要将data中的字段设置为数组形式才行，并且checkbox影响vue的值  --&gt;</span><br><span class="line">            &lt;input type=&quot;checkbox&quot; v-model=&quot;userinfo.hobby&quot; value=&quot;学习&quot;&gt; 打游戏</span><br><span class="line">            &lt;input type=&quot;checkbox&quot; v-model=&quot;userinfo.hobby&quot; value=&quot;吃饭&quot;&gt; 吃饭</span><br><span class="line">            &lt;input type=&quot;checkbox&quot; v-model=&quot;userinfo.hobby&quot; value=&quot;打游戏&quot;&gt;</span><br><span class="line">            &lt;br/&gt;&lt;br/&gt; 所属校区</span><br><span class="line">            &lt;select v-model=&quot;userinfo.city&quot;&gt;</span><br><span class="line">                &lt;option value=&quot;&quot;&gt;&lt;/option&gt;</span><br><span class="line">                &lt;option value=&quot;beijing&quot;&gt;北京&lt;/option&gt;</span><br><span class="line">                &lt;option value=&quot;nanjing&quot;&gt;南京&lt;/option&gt;</span><br><span class="line">                &lt;option value=&quot;shenzhen&quot;&gt;深圳&lt;/option&gt;</span><br><span class="line">                &lt;option value=&quot;guangzhou&quot;&gt;广州&lt;/option&gt;</span><br><span class="line">            &lt;/select&gt; &lt;br/&gt;&lt;br/&gt;其它信息</span><br><span class="line">            &lt;!-- v-model.lazy失去焦点的一瞬间进行收集 --&gt;</span><br><span class="line">            &lt;textarea v-model.lazy=&quot;userinfo.other&quot;&gt;&lt;/textarea&gt; &lt;br/&gt;&lt;br/&gt;</span><br><span class="line">            &lt;input type=&quot;checkbox&quot; v-model=&quot;userinfo.check&quot;&gt;阅读并接收</span><br><span class="line">            &lt;a href=&quot;https://www.pku.edu.cn/&quot;&gt;《用户协议》&lt;/a&gt;</span><br><span class="line">            &lt;button type=&quot;submit&quot;&gt;提交&lt;/button&gt;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    Vue.config.productionTip = false</span><br><span class="line">    const vm = new Vue(&#123;</span><br><span class="line">        el: &#x27;#root&#x27;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            userinfo: &#123;</span><br><span class="line">                account: &#x27;&#x27;,</span><br><span class="line">                password: &#x27;&#x27;,</span><br><span class="line">                age: &#x27;&#x27;,</span><br><span class="line">                sex: &#x27;female&#x27;,</span><br><span class="line">                hobby: [],</span><br><span class="line">                city: &#x27;beijing&#x27;,</span><br><span class="line">                other: &#x27;&#x27;,</span><br><span class="line">                check: &#x27;&#x27;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            demo() &#123;</span><br><span class="line">                //将提交过来的json文件变为可供阅读的字符串</span><br><span class="line">                console.log(JSON.stringify(this.userinfo))</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="样式的绑定"><a href="#样式的绑定" class="headerlink" title="样式的绑定"></a>样式的绑定</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line"> &lt;meta name=&quot;viewport&quot; content=&quot;width=device-w                               nitial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        .basic &#123;</span><br><span class="line">            width: 400px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            border: 1px solid black;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .happy &#123;</span><br><span class="line">            border: 4px solid red;</span><br><span class="line">            ;</span><br><span class="line">            background-color: rgba(255, 255, 0, 0.644);</span><br><span class="line">            background: linear-gradient(30deg, yellow, pink, orange, yellow);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .sad &#123;</span><br><span class="line">            border: 4px dashed rgb(2, 197, 2);</span><br><span class="line">            background-color: gray;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .normal &#123;</span><br><span class="line">            background-color: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .atguigu1 &#123;</span><br><span class="line">            background-color: yellowgreen;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .atguigu2 &#123;</span><br><span class="line">            font-size: 30px;</span><br><span class="line">            text-shadow: 2px 2px 10px red;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .atguigu3 &#123;</span><br><span class="line">            border-radius: 20px;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- 总结：</span><br><span class="line"></span><br><span class="line">                class样式：</span><br><span class="line"></span><br><span class="line">                写法：class=&quot;xxx&quot;，xxx可以是字符串、对象、数组</span><br><span class="line"></span><br><span class="line">                字符串写法适用于：类名不确定，要动态获取</span><br><span class="line"></span><br><span class="line">                对象写法适用于：要绑定多个样式，个数不确定，名字也不确定</span><br><span class="line"></span><br><span class="line">                数组写法适用于：要绑定多个样式，个数确定，名字也确定，但不确定用不用</span><br><span class="line"></span><br><span class="line">                style样式：</span><br><span class="line"></span><br><span class="line">                :style=&quot;&#123;fontSize: xxx&#125;&quot;其中xxx是动态值</span><br><span class="line">                :style=&quot;[a,b]&quot;其中a、b是样式对象</span><br><span class="line"> --&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;!-- 绑定class样式--字符串写法 适用于：样式的类名不确定，需要动态指定--&gt;</span><br><span class="line">        &lt;div class=&quot;basic&quot; :class=&quot;mood&quot; @click=&quot;changeMood&quot;&gt;&#123;&#123;name&#125;&#125;&lt;/div&gt; &lt;br&gt;&lt;br&gt;</span><br><span class="line">        &lt;!-- 绑定class样式--数组写法 适用于：样式的名字不确定，个数不确定，需要动态指定--&gt;</span><br><span class="line">        &lt;div class=&quot;basic&quot; :class=&quot;classArr&quot; @click=&quot;changeMood&quot;&gt;&#123;&#123;name&#125;&#125;&lt;/div&gt;&lt;br&gt;&lt;br&gt;</span><br><span class="line">        &lt;!-- 绑定class样式--数组写法 适用于：样式的名字确定，确定不确定，但需要动态决定用不用--&gt;</span><br><span class="line">        &lt;div class=&quot;basic&quot; :class=&quot;classObj&quot; @click=&quot;changeMood&quot;&gt;&#123;&#123;name&#125;&#125;&lt;/div&gt;&lt;br&gt;&lt;br&gt;</span><br><span class="line">        &lt;!-- style样式绑定 --&gt;</span><br><span class="line">        &lt;div class=&quot;basic&quot; :style=&quot;styleObj&quot; @click=&quot;changeMood&quot;&gt;&#123;&#123;name&#125;&#125;&lt;/div&gt;</span><br><span class="line">        &lt;!-- style样式绑定 数组写法，用得比较少--&gt;</span><br><span class="line">        &lt;div class=&quot;basic&quot; :style=&quot;styleArr&quot; @click=&quot;changeMood&quot;&gt;&#123;&#123;name&#125;&#125;&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    Vue.config.productionTip = false</span><br><span class="line">    new Vue(&#123;</span><br><span class="line">        el: &#x27;#root&#x27;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            name: &#x27;北京大学&#x27;,</span><br><span class="line">            mood: &#x27;normal&#x27;, //变化的样式最好用绑定样式去写</span><br><span class="line">            classArr: [&#x27;atguigu1&#x27;, &#x27;atguigu2&#x27;, &#x27;atguigu3&#x27;], //数组写在此处可以让vue管理数组</span><br><span class="line">            classObj: &#123;</span><br><span class="line">                atguigu1: false,</span><br><span class="line">                atguigu2: false</span><br><span class="line">            &#125;,</span><br><span class="line">            styleObj: &#123;</span><br><span class="line">                fontSize: &#x27;40px&#x27;, // fontSize== font-size</span><br><span class="line">                backgroundColor: &#x27;orange&#x27;</span><br><span class="line">            &#125;,</span><br><span class="line">            styleArr: [&#123;</span><br><span class="line">                fontSize: &#x27;40px&#x27;, // fontSize== font-size</span><br><span class="line">                backgroundColor: &#x27;blue&#x27;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                color: &#x27;red&#x27;</span><br><span class="line">            &#125;]</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            changeMood() &#123;</span><br><span class="line">                const arr = [&#x27;happy&#x27;, &#x27;sad&#x27;, &#x27;normal&#x27;]</span><br><span class="line">                const index = Math.floor(Math.random() * 3) // Math.floor向下取整</span><br><span class="line">                this.mood = arr[index]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="Vue中的过滤器"><a href="#Vue中的过滤器" class="headerlink" title="Vue中的过滤器"></a>Vue中的过滤器</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src=&quot;./day.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- 总结：</span><br><span class="line"></span><br><span class="line">        过滤器：</span><br><span class="line"></span><br><span class="line">        定义：对要显示的数据进行特定格式化后再显示（适用于一些简单逻辑的处理）。</span><br><span class="line"></span><br><span class="line">        语法：</span><br><span class="line"></span><br><span class="line">        注册过滤器：Vue.filter(name,callback) 或 new Vue&#123;filters:&#123;&#125;&#125;</span><br><span class="line"></span><br><span class="line">        使用过滤器：&#123;&#123; xxx | 过滤器名&#125;&#125; 或 v-bind:属性 = &quot;xxx | 过滤器名&quot;</span><br><span class="line"></span><br><span class="line">        备注：</span><br><span class="line"></span><br><span class="line">        过滤器可以接收额外参数，多个过滤器也可以串联</span><br><span class="line">        并没有改变原本的数据，而是产生新的对应的数据</span><br><span class="line"> --&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;!-- 过滤器不可跟复杂逻辑，例如v-model --&gt;</span><br><span class="line">        &lt;h3 :x=&quot;msg | mySlice&quot;&gt;大学&lt;/h3&gt;</span><br><span class="line">        &lt;!-- 计算属性实现 --&gt;</span><br><span class="line">        &lt;h2&gt;显示格式化后的时间，现在是&#123;&#123;fmtTime&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;!-- methods实现 --&gt;</span><br><span class="line">        &lt;h2&gt;显示格式化后的时间，现在是&#123;&#123;getfmtTime()&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;!-- 过滤器实现 将time的值传入timeFormater--&gt;</span><br><span class="line">        &lt;h2&gt;现在是:&#123;&#123;time | timeFormater&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;!-- 过滤器传参 --&gt;</span><br><span class="line">        &lt;h2&gt;现在是:&#123;&#123;time | timeFormater(&#x27;YYYY_MM_DD&#x27;)|mySlice&#125;&#125;&lt;/h2&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div id=&quot;root2&quot;&gt;</span><br><span class="line">        &lt;h2&gt;&#123;&#123;msg|mySlice&#125;&#125;&lt;/h2&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    Vue.config.productionTip = false</span><br><span class="line">        //注册全局过滤器</span><br><span class="line">    Vue.filter(&#x27;mySlice&#x27;, function(value) &#123;</span><br><span class="line">        return value.slice(0, 4) //只截取前四位</span><br><span class="line">    &#125;)</span><br><span class="line">    new Vue(&#123;</span><br><span class="line">        el: &#x27;#root&#x27;,</span><br><span class="line"></span><br><span class="line">        data: &#123;</span><br><span class="line">            time: 1621561377603, //时间戳</span><br><span class="line">            msg: &#x27;你好，北京&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        computed: &#123;</span><br><span class="line">            fmtTime() &#123;</span><br><span class="line">                return dayjs(this.time).format(&#x27;YYYY-MM-DD HH:mm:ss&#x27;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            getfmtTime() &#123;</span><br><span class="line">                return dayjs(this.time).format(&#x27;YYYY-MM-DD HH:mm:ss&#x27;)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line">        //注册局部过滤器</span><br><span class="line">        filters: &#123;</span><br><span class="line">            timeFormater(value, str = &#x27;YYYY-MM-DD HH:mm:ss&#x27;) &#123;</span><br><span class="line">                //str有值用的用返回过来的值，没有则直接使用str中格式</span><br><span class="line">                console.log(&#x27;@&#x27;, value)</span><br><span class="line">                return dayjs(value).format(str)</span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    new Vue(&#123;</span><br><span class="line">        el: &#x27;#root2&#x27;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            msg: &#x27;2020-1-1&#x27;,</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>此处使用的是Day.js的源文件做为条件过滤，可以在Day.js官网中下载源文件</p><h2 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;计算属性&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;!-- 总结：</span><br><span class="line"></span><br><span class="line">            计算属性：</span><br><span class="line"></span><br><span class="line">            定义：要用的属性不存在，需要通过已有属性计算得来。</span><br><span class="line"></span><br><span class="line">            原理：底层借助了Objcet.defineproperty()方法提供的getter和setter。</span><br><span class="line"></span><br><span class="line">            get函数什么时候执行？</span><br><span class="line"></span><br><span class="line">            初次读取时会执行一次</span><br><span class="line">            当依赖的数据发生改变时会被再次调用</span><br><span class="line">            优势：与methods实现相比，内部有缓存机制（复用），效率更高，调试方便</span><br><span class="line"></span><br><span class="line">            备注：</span><br><span class="line"></span><br><span class="line">            计算属性最终会出现在vm上，直接读取使用即可</span><br><span class="line">            如果计算属性要被修改，那必须写set函数去响应修改，且set中要引起计算时依赖的数据发生改变</span><br><span class="line">            如果计算属性确定不考虑修改，可以使用计算属性的简写形式</span><br><span class="line">--&gt;</span><br><span class="line">        姓：&lt;input type=&quot;text&quot; v-model=&quot;firstName&quot;&gt;&lt;br&gt;&lt;br&gt; 名：</span><br><span class="line">        &lt;input type=&quot;text&quot; v-model=&quot;lastName&quot;&gt;&lt;br&gt;&lt;br&gt; 姓名：</span><br><span class="line">        &lt;span&gt;&#123;&#123;fullName&#125;&#125;&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        Vue.config.productionTip = false</span><br><span class="line"></span><br><span class="line">        new Vue(&#123;</span><br><span class="line">            el: &#x27;#root&#x27;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                firstName: &#x27;张&#x27;,</span><br><span class="line">                lastName: &#x27;三&#x27;</span><br><span class="line">            &#125;,</span><br><span class="line">            /*正常书写模式*/</span><br><span class="line">            computed: &#123;</span><br><span class="line">                fullName: &#123;</span><br><span class="line">                    get() &#123;</span><br><span class="line">                        return this.firstName + &#x27;-&#x27; + this.lastName</span><br><span class="line">                    &#125;,</span><br><span class="line">                    set(value) &#123;</span><br><span class="line">                            const arr = value.split(&#x27;-&#x27;)</span><br><span class="line">                            this.firstName = arr[0]</span><br><span class="line">                            this.lastName = arr[1]</span><br><span class="line">                        &#125;</span><br><span class="line">                        /*</span><br><span class="line">            简写模式</span><br><span class="line">            computed:&#123;</span><br><span class="line">                fullName()&#123;</span><br><span class="line">                return this.firstName + &#x27;-&#x27; + this.lastName</span><br><span class="line">    &#125;</span><br><span class="line">                    */</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="监视属性"><a href="#监视属性" class="headerlink" title="监视属性"></a>监视属性</h2><h3 id="监视属性的简单演示"><a href="#监视属性的简单演示" class="headerlink" title="监视属性的简单演示"></a>监视属性的简单演示</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;监视属性&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;!--  </span><br><span class="line">            总结：</span><br><span class="line"></span><br><span class="line">                监视属性watch：</span><br><span class="line"></span><br><span class="line">                当被监视的属性变化时，回调函数自动调用，进行相关操作</span><br><span class="line">                监视的属性必须存在，才能进行监视</span><br><span class="line">                监视有两种写法：</span><br><span class="line">                创建Vue时传入watch配置</span><br><span class="line">               </span><br><span class="line">        --&gt;</span><br><span class="line"></span><br><span class="line">        &lt;h2&gt;今天天气好&#123;&#123;info&#125;&#125;!&lt;/h2&gt;</span><br><span class="line">        &lt;button @click=&quot;changeWeather&quot;&gt;点击切换天气&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        Vue.config.productionTip = false</span><br><span class="line"></span><br><span class="line">        const vm = new Vue(&#123;</span><br><span class="line">            el: &#x27;#root&#x27;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                isHot: true,</span><br><span class="line">            &#125;,</span><br><span class="line">            computed: &#123;</span><br><span class="line">                info() &#123;</span><br><span class="line">                    return this.isHot ? &#x27;炎热&#x27; : &#x27;凉爽&#x27;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                changeWeather() &#123;</span><br><span class="line">                    this.isHot = !this.isHot</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            watch: &#123;</span><br><span class="line">                /*isHot: &#123;</span><br><span class="line">                    immediate: true, //初始化时让handler调用一下</span><br><span class="line">                    //handler什么时候调用？当isHot发生改变时</span><br><span class="line">                    handler(newValue, oldValue) &#123;</span><br><span class="line">                        console.log(&#x27;isHot被修改了&#x27;, newValue, oldValue)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;*/</span><br><span class="line"></span><br><span class="line">                //简写</span><br><span class="line">                isHot(newValue, oldValue) &#123;</span><br><span class="line">                    console.log(&#x27;isHot被修改了&#x27;, newValue, oldValue, this)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            /*通过vm.$watch监视</span><br><span class="line">            //正常写法</span><br><span class="line">            vm.$watch(</span><br><span class="line">                &#x27;isHot&#x27;, &#123;</span><br><span class="line">                immediate: true,</span><br><span class="line">                handler(newValue, oldValue) &#123;</span><br><span class="line">                    console.log(&#x27;isHot被修改了&#x27;, newValue, oldValue)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">            //简写</span><br><span class="line">            vm.$watch(&#x27;isHot&#x27;,function(newValue,oldValue)&#123;</span><br><span class="line">                console.log(&#x27;isHot被修改了&#x27;,newValue,oldValue,this)</span><br><span class="line">                             &#125;)</span><br><span class="line">            */</span><br><span class="line"></span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="监听属性-VS-计算属性"><a href="#监听属性-VS-计算属性" class="headerlink" title="监听属性 VS 计算属性"></a>监听属性 VS 计算属性</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;计算属性&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;!-- 总结：</span><br><span class="line"></span><br><span class="line">            computed和watch之间的区别：</span><br><span class="line"></span><br><span class="line">            computed能完成的功能，watch都可以完成</span><br><span class="line">            watch能完成的功能，computed不一定能完成，例如：watch可以进行异步操作</span><br><span class="line">            两个重要的小原则：</span><br><span class="line"></span><br><span class="line">            所有被Vue管理的函数，最好写成普通函数，这样this的指向才是vm 或 组件实例对象</span><br><span class="line">            所有不被Vue所管理的函数（定时器的回调函数、ajax的回调函数等、Promise的回调函数），最好写成箭头函数，这样this的指向才是vm 或 组件实例对象。</span><br><span class="line"> --&gt;</span><br><span class="line">        姓：&lt;input type=&quot;text&quot; v-model=&quot;firstName&quot;&gt;&lt;br&gt;&lt;br&gt; 名：</span><br><span class="line">        &lt;input type=&quot;text&quot; v-model=&quot;lastName&quot;&gt;&lt;br&gt;&lt;br&gt; 姓名：</span><br><span class="line">        &lt;span&gt;&#123;&#123;fullName&#125;&#125;&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        Vue.config.productionTip = false</span><br><span class="line"></span><br><span class="line">        new Vue(&#123;</span><br><span class="line">            el: &#x27;#root&#x27;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                firstName: &#x27;张&#x27;,</span><br><span class="line">                lastName: &#x27;三&#x27;,</span><br><span class="line">                fullName: &#x27;张-三&#x27;</span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            /*computed: &#123;</span><br><span class="line">                fullName() &#123;</span><br><span class="line">                    return this.firstName + &#x27;-&#x27; + this.lastName</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;*/</span><br><span class="line"></span><br><span class="line">            watch: &#123;</span><br><span class="line">                firstName(val) &#123;</span><br><span class="line">                    //当firstname改变时，将会在此处进行更新firstname的值</span><br><span class="line">                    setTimeout(() =&gt; &#123; //所有不被Vue所管理的函数,最好写成箭头函数，这样this的指向才是vm 或 组件实例对象。</span><br><span class="line">                        this.fullName = val + &#x27;-&#x27; + this.lastName</span><br><span class="line">                    &#125;, 1000);</span><br><span class="line">                &#125;,</span><br><span class="line">                lastName(val) &#123;</span><br><span class="line">                    //当lastName改变时，将会在此处进行更新firstname的值</span><br><span class="line">                    this.fullName = this.firstName + &#x27;-&#x27; + val</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="深度监视"><a href="#深度监视" class="headerlink" title="深度监视"></a>深度监视</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;深度监视&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;!-- 总结：</span><br><span class="line"></span><br><span class="line">            深度监视：</span><br><span class="line"></span><br><span class="line">                    Vue中的watch默认不监测对象内部值的改变（一层）</span><br><span class="line">                    在watch中配置deep:true可以监测对象内部值的改变（多层）</span><br><span class="line">                    备注：</span><br><span class="line"></span><br><span class="line">                    Vue自身可以监测对象内部值的改变，但Vue提供的watch默认不可以</span><br><span class="line">                    使用watch时根据监视数据的具体结构，决定是否采用深度监视</span><br><span class="line">--&gt;</span><br><span class="line">        &lt;h3&gt;a的值是:&#123;&#123;numbers.a&#125;&#125;&lt;/h3&gt;</span><br><span class="line">        &lt;button @click=&quot;numbers.a++&quot;&gt;点我让a+1&lt;/button&gt;</span><br><span class="line">        &lt;h3&gt;b的值是:&#123;&#123;numbers.b&#125;&#125;&lt;/h3&gt;</span><br><span class="line">        &lt;button @click=&quot;numbers.b++&quot;&gt;点我让b+1&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        Vue.config.productionTip = false</span><br><span class="line"></span><br><span class="line">        new Vue(&#123;</span><br><span class="line">            el: &#x27;#root&#x27;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                isHot: true,</span><br><span class="line">                numbers: &#123;</span><br><span class="line">                    a: 1,</span><br><span class="line">                    b: 1,</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            watch: &#123;</span><br><span class="line">                //监视多级结构中所有属性的变化</span><br><span class="line">                numbers: &#123;</span><br><span class="line">                    deep: true, //此处为深度监视的开关，默认为false</span><br><span class="line">                    handler() &#123;</span><br><span class="line">                        console.log(&#x27;numbers改变了&#x27;)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                //监视多级结构中某个属性的变化</span><br><span class="line">                /* &#x27;numbers.a&#x27;:&#123;</span><br><span class="line">                handler()&#123;</span><br><span class="line">                console.log(&#x27;a被改变了&#x27;)</span><br><span class="line">                &#125;</span><br><span class="line">                &#125; */</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="内置指令"><a href="#内置指令" class="headerlink" title="内置指令"></a>内置指令</h2><h3 id="v-cloak"><a href="#v-cloak" class="headerlink" title="v-cloak"></a>v-cloak</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot; /&gt;</span><br><span class="line">    &lt;title&gt;v-cloak指令&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        [v-cloak] &#123;</span><br><span class="line">            display: none;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!--  </span><br><span class="line">        总结：</span><br><span class="line"></span><br><span class="line">            v-cloak指令（没有值）：</span><br><span class="line"></span><br><span class="line">            本质是一个特殊属性，Vue实例创建完毕并接管容器,显示正确内容后，会删掉v-cloak属性</span><br><span class="line">            使用css配合v-cloak可以解决网速慢时页面展示出&#123;&#123;xxx&#125;&#125;的问题</span><br><span class="line">    --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;h2 v-cloak&gt;&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    Vue.config.productionTip = false</span><br><span class="line"></span><br><span class="line">    new Vue(&#123;</span><br><span class="line">        el: &#x27;#root&#x27;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            name: &#x27;尚硅谷&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="v-html"><a href="#v-html" class="headerlink" title="v-html"></a>v-html</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot; /&gt;</span><br><span class="line">    &lt;title&gt;v-html指令&lt;/title&gt;</span><br><span class="line">    &lt;script type=&quot;text/javascript&quot; src=&quot;../js/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;!--  总结：</span><br><span class="line"></span><br><span class="line">            v-html指令：</span><br><span class="line"></span><br><span class="line">            作用：向指定节点中渲染包含html结构的内容</span><br><span class="line"></span><br><span class="line">            与插值语法的区别：</span><br><span class="line"></span><br><span class="line">            v-html会替换掉节点中所有的内容，&#123;&#123;xx&#125;&#125;则不会</span><br><span class="line">            v-html可以识别html结构</span><br><span class="line">            严重注意：v-html有安全性问题！！！</span><br><span class="line"></span><br><span class="line">            在网站上动态渲染任意HTML是非常危险的，容易导致XSS攻击</span><br><span class="line">            一定要在可信的内容上使用v-html，永远不要用在用户提交的内容上！！！</span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div&gt;Hello，&#123;&#123;name&#125;&#125;&lt;/div&gt;</span><br><span class="line">        &lt;div v-html=&quot;str&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div v-html=&quot;str2&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    Vue.config.productionTip = false //阻止 vue 在启动时生成生产提示。</span><br><span class="line"></span><br><span class="line">    new Vue(&#123;</span><br><span class="line">        el: &#x27;#root&#x27;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            name: &#x27;清华大学&#x27;,</span><br><span class="line">            str: &#x27;&lt;h3&gt;你好啊！&lt;/h3&gt;&#x27;,</span><br><span class="line">            str2: &#x27;&lt;a href=javascript:location.href=&quot;http://www.baidu.com?&quot;+document.cookie&gt;兄弟我找到你想要的资源了，快来！&lt;/a&gt;&#x27;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="v-once"><a href="#v-once" class="headerlink" title="v-once"></a>v-once</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot; /&gt;</span><br><span class="line">    &lt;title&gt;v-once指令&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- </span><br><span class="line">            总结：</span><br><span class="line"></span><br><span class="line">                v-once指令：</span><br><span class="line"></span><br><span class="line">                v-once所在节点在初次动态渲染后，也就是只执行一次渲染，就视为静态内容了</span><br><span class="line"></span><br><span class="line">                以后数据的改变不会引起v-once所在结构的更新，可以用于优化性能</span><br><span class="line">         --&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;h2 v-once&gt;n初始化的值是：&#123;&#123;n&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;h2&gt;n现在的值是：&#123;&#123;n&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;button @click=&quot;n++&quot;&gt;点我n+1&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    Vue.config.productionTip = false</span><br><span class="line"></span><br><span class="line">    new Vue(&#123;</span><br><span class="line">        el: &#x27;#root&#x27;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            n: 1</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="v-pre"><a href="#v-pre" class="headerlink" title="v-pre"></a>v-pre</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot; /&gt;</span><br><span class="line">    &lt;title&gt;v-pre指令&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- </span><br><span class="line">        总结：</span><br><span class="line"></span><br><span class="line">                v-pre指令：</span><br><span class="line"></span><br><span class="line">                跳过其所在节点的编译过程，也就是说vue对v-pre所在的模板不做解析和管理，不要在具有插值语法或者其他语法节点的语句中使用 </span><br><span class="line">                可利用它跳过：没有使用指令语法、没有使用插值语法的节点，会加快编译</span><br><span class="line">     --&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;h2 v-pre&gt;Vue其实很简单&lt;/h2&gt;</span><br><span class="line">        &lt;h2&gt;当前的n值是:&#123;&#123;n&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;button @click=&quot;n++&quot;&gt;点我n+1&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    Vue.config.productionTip = false</span><br><span class="line"></span><br><span class="line">    new Vue(&#123;</span><br><span class="line">        el: &#x27;#root&#x27;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            n: 1</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="v-text"><a href="#v-text" class="headerlink" title="v-text"></a>v-text</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- 总结：</span><br><span class="line"></span><br><span class="line">            之前学过的指令：</span><br><span class="line"></span><br><span class="line">            v-bind：单向绑定解析表达式，可简写为:</span><br><span class="line">            v-model：双向数据绑定</span><br><span class="line">            v-for：遍历数组 / 对象 / 字符串</span><br><span class="line">            v-on：绑定事件监听，可简写为@</span><br><span class="line">            v-if：条件渲染（动态控制节点是否存存在）</span><br><span class="line">            v-else：条件渲染（动态控制节点是否存存在）</span><br><span class="line">            v-show：条件渲染 (动态控制节点是否展示)</span><br><span class="line">            v-text指令：</span><br><span class="line"></span><br><span class="line">            作用：向其所在的节点中渲染文本内容</span><br><span class="line"></span><br><span class="line">            与插值语法的区别：v-text会替换掉节点中的内容，&#123;&#123;xx&#125;&#125;则不会。</span><br><span class="line"> --&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;div&gt;&#123;&#123;name&#125;&#125;&lt;/div&gt;</span><br><span class="line">        &lt;div v-text=&quot;name&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;!-- &lt;div v-text=&quot;str&quot;&gt;&lt;/div&gt; --&gt;</span><br><span class="line">        &lt;!-- v-html支持结构的解析 --&gt;</span><br><span class="line">        &lt;div v-html=&quot;str&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    Vue.config.productionTip = false</span><br><span class="line">    new Vue(&#123;</span><br><span class="line">        el: &#x27;#root&#x27;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            name: &#x27;清华大学&#x27;,</span><br><span class="line">            str: &#x27;&lt;h3&gt;你好&lt;/h3&gt;&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h2><h3 id="键盘事件"><a href="#键盘事件" class="headerlink" title="键盘事件"></a>键盘事件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot; /&gt;</span><br><span class="line">    &lt;title&gt;键盘事件&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- Vue中常用的按键别名：</span><br><span class="line"></span><br><span class="line">            回车：enter</span><br><span class="line">            删除：delete (捕获“删除”和“退格”键)</span><br><span class="line">            退出：esc</span><br><span class="line">            空格：space</span><br><span class="line">            换行：tab (特殊，必须配合keydown去使用)</span><br><span class="line">            上：up</span><br><span class="line">            下：down</span><br><span class="line">            左：left</span><br><span class="line">            右：right</span><br><span class="line">            注意：</span><br><span class="line"></span><br><span class="line">            系统修饰键（用法特殊）：ctrl、alt、shift、meta</span><br><span class="line"></span><br><span class="line">            配合keyup使用：按下修饰键的同时，再按下其他键，随后释放其他键，事件才被触发</span><br><span class="line">            配合keydown使用：正常触发事件</span><br><span class="line">            可以使用keyCode去指定具体的按键，比如：@keydown.13=&quot;showInfo&quot;，但不推荐这样使用</span><br><span class="line"></span><br><span class="line">            Vue.config.keyCodes.自定义键名 = 键码，可以自定义按键别名</span><br><span class="line"> --&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;h2&gt;欢迎来到&#123;&#123;name&#125;&#125;学习&lt;/h2&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; placeholder=&quot;按下回车提示输入&quot; @keydown.enter=&quot;showInfo&quot;&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    Vue.config.productionTip = false</span><br><span class="line"></span><br><span class="line">    new Vue(&#123;</span><br><span class="line">        el: &#x27;#root&#x27;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            name: &#x27;尚硅谷&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            showInfo(e) &#123;</span><br><span class="line">                console.log(e.target.value)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="事件处理-1"><a href="#事件处理-1" class="headerlink" title="事件处理"></a>事件处理</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;事件的基本用法&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!--  总结：</span><br><span class="line"></span><br><span class="line">        使用v-on:xxx或@xxx绑定事件，其中xxx是事件名</span><br><span class="line">        事件的回调需要配置在methods对象中，最终会在vm上</span><br><span class="line">        methods中配置的函数，==不要用箭头函数！==否则this就不是vm了</span><br><span class="line">        methods中配置的函数，都是被Vue所管理的函数，this的指向是vm或组件实例对象</span><br><span class="line">        @click=&quot;demo和@click=&quot;demo($event)&quot;效果一致，但后者可以传参</span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;h2&gt;hello,&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;button v-on:click=&quot;showInfo1&quot;&gt;点我提示信息1&lt;/button&gt;</span><br><span class="line">        &lt;button @click=&quot;showInfo2($event,66)&quot;&gt;点我提示信息2&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        Vue.config.productionTip = false</span><br><span class="line">        new Vue(&#123;</span><br><span class="line">            el: &#x27;#root&#x27;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                name: &#x27;清华大学&#x27;</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                showInfo1(event) &#123;</span><br><span class="line">                    console.log(event)</span><br><span class="line">                &#125;,</span><br><span class="line">                showInfo2(evnet, num) &#123;</span><br><span class="line">                    console.log(event, num)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="事件处理修饰符"><a href="#事件处理修饰符" class="headerlink" title="事件处理修饰符"></a>事件处理修饰符</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot; /&gt;</span><br><span class="line">    &lt;title&gt;事件修饰符&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        * &#123;</span><br><span class="line">            margin-top: 20px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .demo1 &#123;</span><br><span class="line">            height: 50px;</span><br><span class="line">            background-color: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .box1 &#123;</span><br><span class="line">            padding: 5px;</span><br><span class="line">            background-color: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .box2 &#123;</span><br><span class="line">            padding: 5px;</span><br><span class="line">            background-color: orange;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .list &#123;</span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            background-color: peru;</span><br><span class="line">            overflow: auto;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        li &#123;</span><br><span class="line">            height: 100px;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;h2&gt;欢迎来到&#123;&#123;name&#125;&#125;学习&lt;/h2&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;!-- 总结：</span><br><span class="line"></span><br><span class="line">            Vue中的事件修饰符：</span><br><span class="line"></span><br><span class="line">            prevent：阻止默认事件（常用）</span><br><span class="line">            stop：阻止事件冒泡（常用）</span><br><span class="line">            once：事件只触发一次（常用）</span><br><span class="line">            capture：使用事件的捕获模式</span><br><span class="line">            self：只有event.target是当前操作的元素时才触发事件</span><br><span class="line">            passive：事件的默认行为立即执行，无需等待事件回调执行完毕</span><br><span class="line">            修饰符可以连续写，比如可以这么用：@click.prevent.stop=&quot;showInfo&quot;,代表阻止默认事件的同时阻止冒泡</span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 阻止默认事件 --&gt;</span><br><span class="line">        &lt;a href=&quot;http://www.atguigu.com&quot; @click.prevent=&quot;showInfo&quot;&gt;点我提示信息&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 阻止事件冒泡 --&gt;</span><br><span class="line">        &lt;div class=&quot;demo1&quot; @click=&quot;showInfo&quot;&gt;</span><br><span class="line">            &lt;button @click.stop=&quot;showInfo&quot;&gt;点我提示信息&lt;/button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 事件只触发一次 --&gt;</span><br><span class="line">        &lt;button @click.once=&quot;showInfo&quot;&gt;点我提示信息&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 使用事件的捕获模式,box1在捕获阶段时就被直接输出了，所以即使是内部先发起请求，都会先输出box1的值 --&gt;</span><br><span class="line">        &lt;div class=&quot;box1&quot; @click.capture=&quot;showMsg(1)&quot;&gt;</span><br><span class="line">            div1</span><br><span class="line">            &lt;div class=&quot;box2&quot; @click=&quot;showMsg(2)&quot;&gt;</span><br><span class="line">                div2</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">       &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 只有event.target是当前操作的元素时才触发事件 --&gt;</span><br><span class="line">        &lt;div class=&quot;demo1&quot; @click.self=&quot;showInfo&quot;&gt;</span><br><span class="line">            &lt;button @click=&quot;showInfo&quot;&gt;点我提示信息&lt;/button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 事件的默认行为立即执行，无需等待事件回调执行完毕 --&gt;</span><br><span class="line">        &lt;ul @wheel.passive=&quot;demo&quot; class=&quot;list&quot;&gt;</span><br><span class="line">            &lt;li&gt;1&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;2&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;3&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;4&lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    Vue.config.productionTip = false</span><br><span class="line"></span><br><span class="line">    new Vue(&#123;</span><br><span class="line">        el: &#x27;#root&#x27;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            name: &#x27;尚硅谷&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            showInfo(e) &#123;</span><br><span class="line">                alert(&#x27;同学你好！&#x27;)</span><br><span class="line">            &#125;,</span><br><span class="line">            showMsg(msg) &#123;</span><br><span class="line">                console.log(msg)</span><br><span class="line">            &#125;,</span><br><span class="line">            demo() &#123;</span><br><span class="line">                for (let i = 0; i &lt; 100000; i++) &#123;</span><br><span class="line">                    console.log(&#x27;#&#x27;)</span><br><span class="line">                &#125;</span><br><span class="line">                console.log(&#x27;累坏了&#x27;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="数据的渲染与排序"><a href="#数据的渲染与排序" class="headerlink" title="数据的渲染与排序"></a>数据的渲染与排序</h2><h3 id="列表的过滤"><a href="#列表的过滤" class="headerlink" title="列表的过滤"></a>列表的过滤</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;h2&gt;人员信息&lt;/h2&gt;</span><br><span class="line"></span><br><span class="line">        &lt;input type=&quot;text&quot; placeholder=&quot;请输入姓名&quot; v-model=&quot;keyWord&quot;&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li v-for=&quot;(p,index) in fliperson&quot; :key=&quot;index&quot;&gt;</span><br><span class="line">                &#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;-&#123;&#123;p.sex&#125;&#125;</span><br><span class="line"></span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    Vue.config.productionTip = false</span><br><span class="line"></span><br><span class="line">    new Vue(&#123;</span><br><span class="line">        el: &#x27;#root&#x27;,</span><br><span class="line"></span><br><span class="line">        data: &#123;</span><br><span class="line">            keyWord: &#x27;&#x27;,</span><br><span class="line">            persons: [&#123;</span><br><span class="line">                id: &#x27;001&#x27;,</span><br><span class="line">                name: &#x27;张三&#x27;,</span><br><span class="line">                age: 18,</span><br><span class="line">                sex: &#x27;男&#x27;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                id: &#x27;002&#x27;,</span><br><span class="line">                name: &#x27;李四&#x27;,</span><br><span class="line">                age: 19,</span><br><span class="line">                sex: &#x27;男&#x27;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                id: &#x27;003&#x27;,</span><br><span class="line">                name: &#x27;王五&#x27;,</span><br><span class="line">                age: 20,</span><br><span class="line">                sex: &#x27;男&#x27;</span><br><span class="line">            &#125;],</span><br><span class="line">            //fliperson: []</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        /*watch方法实现列表过滤</span><br><span class="line">        watch: &#123;</span><br><span class="line">            keyWord: &#123;</span><br><span class="line">                immediate: &#x27;true&#x27;,</span><br><span class="line">                //由于空字符串在所有字符串之中都存在，所以可以将persons数组中所有的数据全部输出，所以可以先调用一次空字符串，让所有数据先输出一次</span><br><span class="line">                handler(val) &#123;</span><br><span class="line">                    //此处实现过滤功能</span><br><span class="line">                    this.fliperson = this.persons.filter((p) =&gt; &#123;</span><br><span class="line">                        return p.name.indexOf(val) !== -1 //由于-1等于一个寻找不到字符串，所以此处既然要返回一个存在的值，那就让其不等于-1即可</span><br><span class="line">                            //indexOf()用来搜索值是否存在</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;*/</span><br><span class="line"></span><br><span class="line">        computed: &#123;</span><br><span class="line">            fliperson() &#123;</span><br><span class="line">                //return是计算属性的所必要返回的</span><br><span class="line">                return this.fliperson = this.persons.filter((p) =&gt; &#123;</span><br><span class="line">                    //此处只需写入keyWord后，直接就可以进行传值</span><br><span class="line">                    //只要keyWord一发生变化，那么整个fliperson就会重新运行 </span><br><span class="line">                    return p.name.indexOf(this.keyWord) !== -1</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="列表的排序"><a href="#列表的排序" class="headerlink" title="列表的排序"></a>列表的排序</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;h2&gt;人员信息&lt;/h2&gt;</span><br><span class="line"></span><br><span class="line">        &lt;input type=&quot;text&quot; placeholder=&quot;请输入姓名&quot; v-model=&quot;keyWord&quot;&gt;</span><br><span class="line">        &lt;button @click=&quot;sortType=2&quot;&gt;年龄升序&lt;/button&gt;</span><br><span class="line">        &lt;button @click=&quot;sortType=1&quot;&gt;年龄降序&lt;/button&gt;</span><br><span class="line">        &lt;button @click=&quot;sortType=0&quot;&gt;原顺序&lt;/button&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li v-for=&quot;(p,index) in fliperson&quot; :key=&quot;p.id&quot;&gt;</span><br><span class="line">                &#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;-&#123;&#123;p.sex&#125;&#125;</span><br><span class="line"></span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    Vue.config.productionTip = false</span><br><span class="line"></span><br><span class="line">    new Vue(&#123;</span><br><span class="line">        el: &#x27;#root&#x27;,</span><br><span class="line"></span><br><span class="line">        data: &#123;</span><br><span class="line">            keyWord: &#x27;&#x27;,</span><br><span class="line">            sortType: 0,</span><br><span class="line">            persons: [&#123;</span><br><span class="line">                id: &#x27;001&#x27;,</span><br><span class="line">                name: &#x27;张三&#x27;,</span><br><span class="line">                age: 25,</span><br><span class="line">                sex: &#x27;男&#x27;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                id: &#x27;002&#x27;,</span><br><span class="line">                name: &#x27;李四&#x27;,</span><br><span class="line">                age: 32,</span><br><span class="line">                sex: &#x27;男&#x27;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                id: &#x27;003&#x27;,</span><br><span class="line">                name: &#x27;王五&#x27;,</span><br><span class="line">                age: 20,</span><br><span class="line">                sex: &#x27;男&#x27;</span><br><span class="line">            &#125;],</span><br><span class="line">            //fliperson: []</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        computed: &#123;</span><br><span class="line">            fliperson() &#123;</span><br><span class="line">                //return是计算属性的所必要返回的</span><br><span class="line">                const arr = this.persons.filter((p) =&gt; &#123;</span><br><span class="line">                    //此处只需写入keyWord后，直接就可以进行传值</span><br><span class="line">                    //只要keyWord一发生变化，那么整个fliperson就会重新运行 </span><br><span class="line">                    return p.name.indexOf(this.keyWord) !== -1</span><br><span class="line">                &#125;)</span><br><span class="line">                if (this.sortType) &#123;</span><br><span class="line">                    arr.sort((p1, p2) =&gt; &#123;</span><br><span class="line">                        //p2-p1后减前为升序</span><br><span class="line">                        //p1-p2前减后为降序 </span><br><span class="line">                        return this.sortType === 1 ? p2.age - p1.age : p1.age - p2.age</span><br><span class="line">                    &#125;)</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                return arr</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="列表渲染"><a href="#列表渲染" class="headerlink" title="列表渲染"></a>列表渲染</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;!-- </span><br><span class="line">            v-for指令：</span><br><span class="line">                1.用于展示列表数据</span><br><span class="line">                2.语法：v-for=&quot;(item,index) in xxx&quot; :key=&quot;yyy&quot;</span><br><span class="line">                3.可遍历：数组，对象，字符串(用得少)，指定次数(用得少)</span><br><span class="line">         --&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 遍历数组 --&gt;</span><br><span class="line">        &lt;h2&gt;人员信息&lt;/h2&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li v-for=&quot;(p,index) in persons&quot; :key=&quot;index&quot;&gt;&#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;&lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 遍历对象 </span><br><span class="line">            遍历对象时有value和key的值</span><br><span class="line">        --&gt;</span><br><span class="line">        &lt;h2&gt;汽车信息&lt;/h2&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li v-for=&quot;(value,key) in car&quot; :key=&quot;key&quot;&gt;&#123;&#123;key&#125;&#125;-&#123;&#123;value&#125;&#125;&lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">        &lt;h2&gt;遍历字符串&lt;/h2&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li v-for=&quot;(char,index) in hello&quot; :key=&quot;index&quot;&gt;&#123;&#123;char&#125;&#125;-&#123;&#123;index&#125;&#125;&lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">        &lt;h2&gt;遍历指定次数&lt;/h2&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li v-for=&quot;(number,index) in 5&quot; :key=&quot;index&quot;&gt;&#123;&#123;number&#125;&#125;-&#123;&#123;index&#125;&#125;&lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    Vue.config.productionTip = false</span><br><span class="line">    new Vue(&#123;</span><br><span class="line">        el: &#x27;#root&#x27;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            persons: [&#123;</span><br><span class="line">                id: &#x27;001&#x27;,</span><br><span class="line">                name: &#x27;张三&#x27;,</span><br><span class="line">                age: 18</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                id: &#x27;002&#x27;,</span><br><span class="line">                name: &#x27;李四&#x27;,</span><br><span class="line">                age: 19</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                id: &#x27;003&#x27;,</span><br><span class="line">                name: &#x27;王五&#x27;,</span><br><span class="line">                age: 20</span><br><span class="line">            &#125;],</span><br><span class="line">            car: &#123;</span><br><span class="line">                name: &#x27;奥迪A8&#x27;,</span><br><span class="line">                price: &#x27;70万&#x27;,</span><br><span class="line">                color: &#x27;白色&#x27;</span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            hello: &#x27;hello&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="条件渲染"><a href="#条件渲染" class="headerlink" title="条件渲染"></a>条件渲染</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- 总结：</span><br><span class="line"></span><br><span class="line">                v-if：</span><br><span class="line"></span><br><span class="line">                写法：</span><br><span class="line"></span><br><span class="line">                v-if=&quot;表达式&quot;</span><br><span class="line">                v-else-if=&quot;表达式&quot;</span><br><span class="line">                v-else</span><br><span class="line">                适用于：切换频率较低的场景</span><br><span class="line"></span><br><span class="line">                特点：不展示的DOM元素直接被移除</span><br><span class="line"></span><br><span class="line">                注意：v-if可以和v-else-if、v-else一起使用，但要求结构不能被打断</span><br><span class="line"></span><br><span class="line">                v-show：</span><br><span class="line"></span><br><span class="line">                写法：v-show=&quot;表达式&quot;</span><br><span class="line">                适用于：切换频率较高的场景</span><br><span class="line">                特点：不展示的DOM元素未被移除，仅仅是使用样式隐藏掉</span><br><span class="line">                使用v-if的时，元素可能无法获取到，而使用v-show一定可以获取到</span><br><span class="line"> --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;!-- 使用频率高的用v-show，使用频率低的用v-if --&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 使用v-show做条件渲染 若设置为false，则会隐藏内容，但实际上内容结构没有消失--&gt;</span><br><span class="line">        &lt;!-- &lt;h2 v-show=&quot;false&quot;&gt;欢迎来到&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;h2 v-show=&quot;1===1&quot;&gt;欢迎来到&#123;&#123;name&#125;&#125;&lt;/h2&gt; --&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;!-- 使用v-if做条件渲染 若设置为false，则会隐藏内容，内容结构一并消失--&gt;</span><br><span class="line">        &lt;h2 v-if=&quot;false&quot;&gt;欢迎来到&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;h2 v-if=&quot;1===1&quot;&gt;欢迎来到&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="line"></span><br><span class="line">        &lt;h2&gt;当前的n值为：&#123;&#123;n&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;button @click=n++&gt;点我n+1&lt;/button&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;!-- v-else和v-else-if --&gt;</span><br><span class="line">        &lt;div v-if=&quot;n===1&quot;&gt;Angular&lt;/div&gt;</span><br><span class="line">        &lt;div v-else-if=&quot;n===2&quot;&gt;react&lt;/div&gt;</span><br><span class="line">        &lt;div v-else-if=&quot;n===3&quot;&gt;vue&lt;/div&gt;</span><br><span class="line">        &lt;div v-else&gt;超出可选范围&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- template为模板的意思，在浏览器中渲染页面时，template不会渲染上去 --&gt;</span><br><span class="line">        &lt;!-- template只能够配合v-if进行使用 --&gt;</span><br><span class="line">        &lt;template v-if=&quot;n===1&quot;&gt;</span><br><span class="line">            &lt;h2&gt;你好&lt;/h2&gt;</span><br><span class="line">            &lt;h2&gt;北京大学&lt;/h2&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    Vue.config.productionTip = false</span><br><span class="line">    new Vue(&#123;</span><br><span class="line">        el: &#x27;#root&#x27;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            name: &#x27;清华大学&#x27;,</span><br><span class="line">            n: 0</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="数据渲染时，key的作用"><a href="#数据渲染时，key的作用" class="headerlink" title="数据渲染时，key的作用"></a>数据渲染时，key的作用</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- </span><br><span class="line">            面试题：react、vue中的key有什么作用？（key的内部原理）</span><br><span class="line"></span><br><span class="line">                虚拟DOM中key的作用：key是虚拟DOM中对象的标识，当数据发生变化时，Vue会根据【新数据】生成【新的虚拟DOM】，随后Vue进行【新虚拟DOM】与【旧虚拟DOM】的差异比较，比较规则如下：</span><br><span class="line"></span><br><span class="line">                对比规则：</span><br><span class="line"></span><br><span class="line">                旧虚拟DOM中找到了与新虚拟DOM相同的key：</span><br><span class="line"></span><br><span class="line">                若虚拟DOM中内容没变, 直接使用之前的真实DOM</span><br><span class="line">                若虚拟DOM中内容变了, 则生成新的真实DOM，随后替换掉页面中之前的真实DOM</span><br><span class="line">                旧虚拟DOM中未找到与新虚拟DOM相同的key：创建新的真实DOM，随后渲染到到页面</span><br><span class="line"></span><br><span class="line">                用index作为key可能会引发的问题：</span><br><span class="line"></span><br><span class="line">                若对数据进行逆序添加、逆序删除等破坏顺序操作：会产生没有必要的真实DOM更新 ==&gt; 界面效果没问题, 但效率低</span><br><span class="line">                若结构中还包含输入类的DOM：会产生错误DOM更新 ==&gt; 界面有问题</span><br><span class="line">                开发中如何选择key?</span><br><span class="line"></span><br><span class="line">                最好使用每条数据的唯一标识作为key，比如id、手机号、身份证号、学号等唯一值</span><br><span class="line">                如果不存在对数据的逆序添加、逆序删除等破坏顺序的操作，仅用于渲染列表，使用index作为key是没有问题的</span><br><span class="line"></span><br><span class="line">         --&gt;</span><br><span class="line">        &lt;!-- 遍历数组 --&gt;</span><br><span class="line">        &lt;h2&gt;人员信息&lt;/h2&gt;</span><br><span class="line"></span><br><span class="line">        &lt;button @click.once=add&gt;添加一个人&lt;/button&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li v-for=&quot;(p,index) in persons&quot; :key=&quot;index&quot;&gt;</span><br><span class="line">                &#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;</span><br><span class="line">                &lt;input type=&quot;text&quot;&gt;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    Vue.config.productionTip = false</span><br><span class="line">    new Vue(&#123;</span><br><span class="line">        el: &#x27;#root&#x27;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            persons: [&#123;</span><br><span class="line">                id: &#x27;001&#x27;,</span><br><span class="line">                name: &#x27;张三&#x27;,</span><br><span class="line">                age: 18</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                id: &#x27;002&#x27;,</span><br><span class="line">                name: &#x27;李四&#x27;,</span><br><span class="line">                age: 19</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                id: &#x27;003&#x27;,</span><br><span class="line">                name: &#x27;王五&#x27;,</span><br><span class="line">                age: 20</span><br><span class="line">            &#125;],</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            add() &#123;</span><br><span class="line">                const p = &#123;</span><br><span class="line">                    id: &#x27;004&#x27;,</span><br><span class="line">                    name: &#x27;老刘&#x27;,</span><br><span class="line">                    age: 40</span><br><span class="line">                &#125;</span><br><span class="line">                this.persons.unshift(p)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="Vue-set的使用"><a href="#Vue-set的使用" class="headerlink" title="Vue.set的使用"></a>Vue.set的使用</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;h1&gt;学校信息&lt;/h1&gt;</span><br><span class="line">        &lt;h2&gt;学校名称：&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;h2&gt;学校名称：&#123;&#123;address&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;br&gt;</span><br><span class="line">        &lt;h1&gt;学生信息&lt;/h1&gt;</span><br><span class="line">        &lt;button @click=&quot;addSex&quot;&gt;点击添加一个性别，默认值为男&lt;/button&gt;</span><br><span class="line">        &lt;h2&gt;学生姓名：&#123;&#123;student.name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;h2 v-if=&quot;student.sex&quot;&gt;性别:&#123;&#123;student.sex&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;h2&gt;学生年龄：&#123;&#123;student.age.rAge&#125;&#125;,对外&#123;&#123;student.age.sAge&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li v-for=&quot; (f,index) in student.friends&quot; :key=&quot;index&quot;&gt;</span><br><span class="line">                &#123;&#123;f.name&#125;&#125;--&#123;&#123;f.age&#125;&#125;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    Vue.config.productionTip = false</span><br><span class="line">    const vm = new Vue(&#123;</span><br><span class="line">        el: &#x27;#root&#x27;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            name: &#x27;北京大学&#x27;,</span><br><span class="line">            address: &#x27;北京&#x27;,</span><br><span class="line">            student: &#123;</span><br><span class="line">                name: &#x27;true&#x27;,</span><br><span class="line">                // sex: &#x27;男&#x27;,</span><br><span class="line">                age: &#123;</span><br><span class="line">                    rAge: 40,</span><br><span class="line">                    sAge: 29</span><br><span class="line">                &#125;,</span><br><span class="line">                friends: [&#123;</span><br><span class="line">                    name: &#x27;jerry&#x27;,</span><br><span class="line">                    age: 35</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    name: &#x27;tony&#x27;,</span><br><span class="line">                    age: 36</span><br><span class="line">                &#125;]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            addSex() &#123;</span><br><span class="line">                /*在student中追加一个属性sex，初始值为男</span><br><span class="line">                Vue.set(this.student, &#x27;sex&#x27;, &#x27;男&#x27;)*/</span><br><span class="line">                this.$set(this.student, &#x27;sex&#x27;, &#x27;男&#x27;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="Vue监测数据改变的原理-数组"><a href="#Vue监测数据改变的原理-数组" class="headerlink" title="Vue监测数据改变的原理_数组"></a>Vue监测数据改变的原理_数组</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;h1&gt;学校信息&lt;/h1&gt;</span><br><span class="line">        &lt;h2&gt;学校名称：&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;h2&gt;学校名称：&#123;&#123;address&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;br&gt;</span><br><span class="line">        &lt;h1&gt;学生信息&lt;/h1&gt;</span><br><span class="line">        &lt;button @click=&quot;addSex&quot;&gt;点击添加一个性别，默认值为男&lt;/button&gt;</span><br><span class="line">        &lt;h2&gt;学生姓名：&#123;&#123;student.name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;h2 v-if=&quot;student.sex&quot;&gt;性别:&#123;&#123;student.sex&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;h2&gt;学生年龄：&#123;&#123;student.age.rAge&#125;&#125;,对外&#123;&#123;student.age.sAge&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li v-for=&quot; (f,index) in student.friends&quot; :key=&quot;index&quot;&gt;</span><br><span class="line">                &#123;&#123;f.name&#125;&#125;--&#123;&#123;f.age&#125;&#125;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">        &lt;h2&gt;爱好&lt;/h2&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li v-for=&quot; (h,index) in student.hobby&quot; :key=&quot;index&quot;&gt;</span><br><span class="line">                &#123;&#123;h&#125;&#125;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    Vue.config.productionTip = false</span><br><span class="line">    const vm = new Vue(&#123;</span><br><span class="line">        el: &#x27;#root&#x27;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            name: &#x27;北京大学&#x27;,</span><br><span class="line">            address: &#x27;北京&#x27;,</span><br><span class="line">            student: &#123;</span><br><span class="line">                name: &#x27;true&#x27;,</span><br><span class="line">                // sex: &#x27;男&#x27;,</span><br><span class="line">                hobby: [&#x27;抽烟&#x27;, &#x27;喝酒&#x27;, &#x27;烫头&#x27;], //想要在vue中修改数组元素，必须使用push()、pop()、shift()、unshift()、splice()、sort()、reverse()</span><br><span class="line">                age: &#123;</span><br><span class="line">                    rAge: 40,</span><br><span class="line">                    sAge: 29</span><br><span class="line">                &#125;,</span><br><span class="line">                friends: [&#123;</span><br><span class="line">                    name: &#x27;jerry&#x27;,</span><br><span class="line">                    age: 35</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    name: &#x27;tony&#x27;,</span><br><span class="line">                    age: 36</span><br><span class="line">                &#125;]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            addSex() &#123;</span><br><span class="line">                /*在student中追加一个属性sex，初始值为男</span><br><span class="line">                Vue.set(this.student, &#x27;sex&#x27;, &#x27;男&#x27;)*/</span><br><span class="line">                this.$set(this.student, &#x27;sex&#x27;, &#x27;男&#x27;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="Vue监测数据改变总结"><a href="#Vue监测数据改变总结" class="headerlink" title="Vue监测数据改变总结"></a>Vue监测数据改变总结</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot; /&gt;</span><br><span class="line">    &lt;title&gt;Vue数据监视&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        button &#123;</span><br><span class="line">            margin-top: 10px;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;!-- </span><br><span class="line">            总结：</span><br><span class="line"></span><br><span class="line">                Vue监视数据的原理：</span><br><span class="line"></span><br><span class="line">                vue会监视data中所有层次的数据</span><br><span class="line"></span><br><span class="line">                如何监测对象中的数据？</span><br><span class="line"></span><br><span class="line">                通过setter实现监视，且要在new Vue时就传入要监测的数据</span><br><span class="line"></span><br><span class="line">                对象中后追加的属性，Vue默认不做响应式处理</span><br><span class="line">                如需给后添加的属性做响应式，请使用如下API：</span><br><span class="line">                Vue.set(target,propertyName/index,value)</span><br><span class="line">                vm.$set(target,propertyName/index,value)</span><br><span class="line">                如何监测数组中的数据？</span><br><span class="line"></span><br><span class="line">                通过包裹数组更新元素的方法实现，本质就是做了两件事：</span><br><span class="line"></span><br><span class="line">                调用原生对应的方法对数组进行更新</span><br><span class="line">                重新解析模板，进而更新页面</span><br><span class="line">                在Vue修改数组中的某个元素一定要用如下方法：</span><br><span class="line"></span><br><span class="line">                使用这些API：push()、pop()、shift()、unshift()、splice()、sort()、reverse()</span><br><span class="line">                Vue.set() 或 vm.$set()</span><br><span class="line"></span><br><span class="line">         --&gt;</span><br><span class="line">        &lt;h1&gt;学生信息&lt;/h1&gt;</span><br><span class="line">        &lt;button @click=&quot;student.age++&quot;&gt;年龄+1岁&lt;/button&gt;&lt;br/&gt;</span><br><span class="line">        &lt;button @click=&quot;addSex&quot;&gt;添加性别属性，默认值：男&lt;/button&gt; &lt;br/&gt;</span><br><span class="line">        &lt;button @click=&quot;student.sex=&#x27;未知&#x27;&quot;&gt;添加性别属性,未知&lt;/button&gt; &lt;br/&gt;</span><br><span class="line">        &lt;button @click=&quot;addFriend&quot;&gt;在列表首位添加一个朋友&lt;/button&gt; &lt;br/&gt;</span><br><span class="line">        &lt;button @click=&quot;updateFirstFriendName&quot;&gt;修改第一个朋友的名字为：张三&lt;/button&gt;&lt;br/&gt;</span><br><span class="line">        &lt;button @click=&quot;addHobby&quot;&gt;添加一个爱好&lt;/button&gt; &lt;br/&gt;</span><br><span class="line">        &lt;button @click=&quot;updateHobby&quot;&gt;修改第一个爱好为：开车&lt;/button&gt;&lt;br/&gt;</span><br><span class="line">        &lt;button @click=&quot;removeSmoke&quot;&gt;过滤掉爱好中的抽烟&lt;/button&gt; &lt;br/&gt;</span><br><span class="line">        &lt;h3&gt;姓名：&#123;&#123;student.name&#125;&#125;&lt;/h3&gt;</span><br><span class="line">        &lt;h3&gt;年龄：&#123;&#123;student.age&#125;&#125;&lt;/h3&gt;</span><br><span class="line">        &lt;h3 v-if=&quot;student.sex&quot;&gt;性别：&#123;&#123;student.sex&#125;&#125;&lt;/h3&gt;</span><br><span class="line">        &lt;h3&gt;爱好：&lt;/h3&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li v-for=&quot;(h,index) in student.hobby&quot; :key=&quot;index&quot;&gt;</span><br><span class="line">                &#123;&#123;h&#125;&#125;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">        &lt;h3&gt;朋友们：&lt;/h3&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li v-for=&quot;(f,index) in student.friends&quot; :key=&quot;index&quot;&gt;</span><br><span class="line">                &#123;&#123;f.name&#125;&#125;--&#123;&#123;f.age&#125;&#125;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    Vue.config.productionTip = false //阻止 vue 在启动时生成生产提示。</span><br><span class="line"></span><br><span class="line">    const vm = new Vue(&#123;</span><br><span class="line">        el: &#x27;#root&#x27;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            student: &#123;</span><br><span class="line">                name: &#x27;tom&#x27;,</span><br><span class="line">                age: 18,</span><br><span class="line">                hobby: [&#x27;抽烟&#x27;, &#x27;喝酒&#x27;, &#x27;烫头&#x27;],</span><br><span class="line">                friends: [&#123;</span><br><span class="line">                    name: &#x27;jerry&#x27;,</span><br><span class="line">                    age: 35</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    name: &#x27;tony&#x27;,</span><br><span class="line">                    age: 36</span><br><span class="line">                &#125;]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            addSex() &#123;</span><br><span class="line">                // Vue.set(this.student, &#x27;sex&#x27;, &#x27;男&#x27;)</span><br><span class="line">                this.$set(this.student, &#x27;sex&#x27;, &#x27;男&#x27;)</span><br><span class="line">            &#125;,</span><br><span class="line">            addFriend() &#123;</span><br><span class="line">                this.student.friends.unshift(&#123;</span><br><span class="line">                    name: &#x27;jack&#x27;,</span><br><span class="line">                    age: 25</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;,</span><br><span class="line">            updateFirstFriendName() &#123;</span><br><span class="line">                //this.student.friends[0]这个就是一个对象，但是要是直接往里面赋值的话，vue不会承认，因为没有getter和setter</span><br><span class="line">                //所以要往后面添加属性名，这个里面才有getter和setter</span><br><span class="line">                this.student.friends[0].name = &#x27;张三&#x27;</span><br><span class="line">                this.student.friends[0].age = 25</span><br><span class="line">            &#125;,</span><br><span class="line">            addHobby() &#123;</span><br><span class="line">                this.student.hobby.push(&#x27;学习&#x27;)</span><br><span class="line">            &#125;,</span><br><span class="line">            updateHobby() &#123;</span><br><span class="line">                //从第0个开始删除一个值，然后添加一个值为开车</span><br><span class="line">                //this.student.hobby.splice(0, 1, &#x27;开车&#x27;)</span><br><span class="line">                this.$set(this.student.hobby, 0, &#x27;开车&#x27;)</span><br><span class="line">            &#125;,</span><br><span class="line">            removeSmoke() &#123;</span><br><span class="line">                //直接替换原数组</span><br><span class="line">                this.student.hobby = this.student.hobby.filter((h) =&gt; &#123;</span><br><span class="line">                    return h !== &#x27;抽烟&#x27;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="组件化"><a href="#组件化" class="headerlink" title="组件化"></a>组件化</h2><h3 id="非单文件组件"><a href="#非单文件组件" class="headerlink" title="非单文件组件"></a>非单文件组件</h3><h4 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- 总结：</span><br><span class="line"></span><br><span class="line">            Vue中使用组件的三大步骤：</span><br><span class="line"></span><br><span class="line">            定义组件(创建组件)</span><br><span class="line">            注册组件</span><br><span class="line">            使用组件(写组件标签)</span><br><span class="line">            如何定义一个组件？</span><br><span class="line"></span><br><span class="line">            使用Vue.extend(options)创建，其中options和new Vue(options)时传入的options几乎一样，但也有点区别：</span><br><span class="line"></span><br><span class="line">            el不要写，为什么？</span><br><span class="line"></span><br><span class="line">            最终所有的组件都要经过一个vm的管理，由vm中的el决定服务哪个容器</span><br><span class="line"></span><br><span class="line">            data必须写成函数，为什么？</span><br><span class="line"></span><br><span class="line">            避免组件被复用时，数据存在引用关系</span><br><span class="line"></span><br><span class="line">            如何注册组件？</span><br><span class="line"></span><br><span class="line">            局部注册：new Vue的时候传入components选项</span><br><span class="line">            全局注册：Vue.component(&#x27;组件名&#x27;,组件)</span><br><span class="line">            编写组件标签：&lt;school&gt;&lt;/school&gt;</span><br><span class="line"> --&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;hello&gt;&lt;/hello&gt;</span><br><span class="line">        &lt;hr&gt;</span><br><span class="line">        &lt;h2&gt;&#123;&#123;msg&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;hr&gt;</span><br><span class="line">        &lt;!-- 3.写组件标签 --&gt;</span><br><span class="line">        &lt;school&gt;&lt;/school&gt;</span><br><span class="line">        &lt;hr&gt;</span><br><span class="line">        &lt;student&gt;&lt;/student&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div id=&quot;root2&quot;&gt;</span><br><span class="line">        &lt;hello&gt;&lt;/hello&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    Vue.config.productionTip = false</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    //1.创建school组件</span><br><span class="line">    const school = Vue.extend(&#123;</span><br><span class="line">        //组件定义时，一定不要写el配置项，因为最终所有的组件都要被一个vm管理，由vm决定服务哪个对象</span><br><span class="line">        //使用函数式data时，外界在不同时候调用时都会返回一个全新的函数</span><br><span class="line"></span><br><span class="line">        //组件在此处定义模板</span><br><span class="line">        template: `</span><br><span class="line">           &lt;div&gt;</span><br><span class="line">               &lt;h2&gt;学校名称:&#123;&#123;schoolName&#125;&#125;&lt;/h2&gt;</span><br><span class="line">               &lt;h2&gt;学校地址:&#123;&#123;address&#125;&#125;&lt;/h2&gt;</span><br><span class="line">               &lt;button @click=&quot;showName&quot;&gt;显示学校名&lt;/button&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">           `,</span><br><span class="line">        data() &#123;</span><br><span class="line"></span><br><span class="line">            return &#123;</span><br><span class="line">                schoolName: &#x27;尚硅谷&#x27;,</span><br><span class="line">                address: &#x27;北京昌平&#x27;,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            showName() &#123;</span><br><span class="line">                alert(this.schoolName)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    //2.创建student组件</span><br><span class="line">    const student = Vue.extend(&#123;</span><br><span class="line">        //组件定义时，一定不要写el配置项，因为最终所有的组件都要被一个vm管理，由vm决定服务哪个对象</span><br><span class="line">        //使用函数式data时，外界在不同时候调用时都会返回一个全新的函数</span><br><span class="line">        template: `</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;h2&gt;学生姓名:&#123;&#123;studentName&#125;&#125;&lt;/h2&gt;</span><br><span class="line">            &lt;h2&gt;学生年龄:&#123;&#123;age&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        `,</span><br><span class="line">        data() &#123;</span><br><span class="line"></span><br><span class="line">            return &#123;</span><br><span class="line">                studentName: &#x27;张三&#x27;,</span><br><span class="line">                age: 18</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    //1.创建hello组件</span><br><span class="line">    const hello = Vue.extend(&#123;</span><br><span class="line">            template: `&lt;div&gt;</span><br><span class="line">            &lt;h2&gt; 你好啊！&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/div&gt;`,</span><br><span class="line">            data() &#123;</span><br><span class="line">                return &#123;</span><br><span class="line">                    name: &#x27;tom&#x27;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        //全局注册hello组件(第二步)</span><br><span class="line">        //第一个为自定义组件名，第二个为组件位置</span><br><span class="line">        //常用的还是局部组件</span><br><span class="line">        //如果用全局组件和局部组件的话，那么注册全局组件的步骤需要在其创建的组件之后才行</span><br><span class="line">    Vue.component(&#x27;hello&#x27;, hello)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    new Vue(&#123;</span><br><span class="line">        el: &#x27;#root&#x27;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            msg: &#x27;你好，清华大学&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line">        //注册组件(局部注册)</span><br><span class="line">        components: &#123;</span><br><span class="line">            school,</span><br><span class="line">            student</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    new Vue(&#123;</span><br><span class="line">        el: &#x27;#root2&#x27;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="几个注意点"><a href="#几个注意点" class="headerlink" title="几个注意点"></a>几个注意点</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;!--  </span><br><span class="line">            总结：</span><br><span class="line"></span><br><span class="line">                关于组件名：</span><br><span class="line"></span><br><span class="line">                一个单词组成：</span><br><span class="line"></span><br><span class="line">                第一种写法（首字母小写）：school</span><br><span class="line">                第二种写法（首字母大写）：School</span><br><span class="line">                多个单词组成：</span><br><span class="line"></span><br><span class="line">                第一种写法（kebab-case命名）：my-school</span><br><span class="line">                第二种写法（CamelCase命名）：MySchool （需要Vue脚手架支持）</span><br><span class="line">                备注：</span><br><span class="line"></span><br><span class="line">                组件名尽可能回避HTML中已有的元素名称，例如：h2、H2都不行</span><br><span class="line">                可以使用name配置项指定组件在开发者工具中呈现的名字</span><br><span class="line">                关于组件标签：</span><br><span class="line"></span><br><span class="line">                第一种写法：&lt;school&gt;&lt;/school&gt;</span><br><span class="line">                第二种写法：&lt;school/&gt;</span><br><span class="line">                备注：不使用脚手架时，&lt;school/&gt;会导致后续组件不能渲染</span><br><span class="line">                一个简写方式：const school = Vue.extend(options)可简写为：const school = options</span><br><span class="line"></span><br><span class="line">        --&gt;</span><br><span class="line"></span><br><span class="line">        &lt;h1&gt;&#123;&#123;msg&#125;&#125;&lt;/h1&gt;</span><br><span class="line">        &lt;my-school&gt;&lt;/my-school&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    Vue.config.productionTip = false</span><br><span class="line">    const school = Vue.extend(&#123;</span><br><span class="line">        name: &#x27;it&#x27;, //可以使用name配置项指定组件在开发者工具中呈现的名字s</span><br><span class="line">        template: `</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;h2&gt;学校名称：&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">            &lt;h2&gt;学校地址：&#123;&#123;address&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        `,</span><br><span class="line">        data() &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                name: &#x27;清华大学&#x27;,</span><br><span class="line">                address: &#x27;北京&#x27;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    new Vue(&#123;</span><br><span class="line">        el: &#x27;#root&#x27;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            msg: &#x27;欢迎学习vue&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line">        components: &#123;</span><br><span class="line">            //school //此处可使用简写形式</span><br><span class="line">            &#x27;my-school&#x27;: school</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="重要的内置关系"><a href="#重要的内置关系" class="headerlink" title="重要的内置关系"></a>重要的内置关系</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- </span><br><span class="line">        一个重要的内置关系：VueComponent.prototype.__proto__ === Vue.prototype</span><br><span class="line">        （也就是说，组件实例对象（vc）的原型对象的__proto__，是连接到Vue.prototype的）</span><br><span class="line">为什么要有这个关系：让组件实例对象（vc）可以访问到 Vue 原型上的属性、方法</span><br><span class="line">     --&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;school&gt;&lt;/school&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    Vue.config.productionTip = false</span><br><span class="line">    Vue.prototype.x = 99</span><br><span class="line">        //定义school组件</span><br><span class="line">    const school = Vue.extend(&#123;</span><br><span class="line">        name: &#x27;school&#x27;, //可以使用name配置项指定组件在vue开发者工具中呈现的名字</span><br><span class="line">        template: `</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;h2&gt;学校名称：&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;h2&gt;学校地址：&#123;&#123;address&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;button @click=&#x27;showX&#x27;&gt;点我输出X&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    `,</span><br><span class="line">        data() &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                name: &#x27;清华大学&#x27;,</span><br><span class="line">                address: &#x27;北京&#x27;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            showX() &#123;</span><br><span class="line">                console.log(this.x) //this是school的实例对象vc</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    new Vue(&#123;</span><br><span class="line">        el: &#x27;#root&#x27;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            msg: &#x27;你好&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line">        components: &#123;</span><br><span class="line">            school</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    /*   //定义一个构造函数</span><br><span class="line">    function Demo() &#123;</span><br><span class="line">        this.a = 1</span><br><span class="line">        this.b = 2</span><br><span class="line">    &#125;</span><br><span class="line">    //定义一个demo的实例对象</span><br><span class="line">    const d = new Demo()</span><br><span class="line"></span><br><span class="line">    console.log(Demo.prototype) //显式原型属性</span><br><span class="line">    console.log(d._proto_) //隐式原型属性</span><br><span class="line"></span><br><span class="line">    //通过显式属性操作原型对象，追加一个x属性，值为99</span><br><span class="line">    Demo.prototype.x = 99</span><br><span class="line">    console.log(d)*/</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="组件的嵌套"><a href="#组件的嵌套" class="headerlink" title="组件的嵌套"></a>组件的嵌套</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    Vue.config.productionTip = false</span><br><span class="line">        //定义student组件</span><br><span class="line">        //先定义student组件，才可以在school组件中嵌套成功</span><br><span class="line">    const student = Vue.extend(&#123;</span><br><span class="line">            name: &#x27;student&#x27;, //可以使用name配置项指定组件在开发者工具中呈现的名字s</span><br><span class="line">            template: `</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">                &lt;h2&gt;学生姓名：&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">                &lt;h2&gt;学生年龄：&#123;&#123;age&#125;&#125;&lt;/h2&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            `,</span><br><span class="line">            data() &#123;</span><br><span class="line">                return &#123;</span><br><span class="line">                    name: &#x27;张三&#x27;,</span><br><span class="line">                    age: 18</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        //定义school组件</span><br><span class="line">    const school = Vue.extend(&#123;</span><br><span class="line">            name: &#x27;school&#x27;, //可以使用name配置项指定组件在vue开发者工具中呈现的名字</span><br><span class="line">            template: `</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;h2&gt;学校名称：&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">            &lt;h2&gt;学校地址：&#123;&#123;address&#125;&#125;&lt;/h2&gt;</span><br><span class="line">            &lt;student&gt;&lt;/student&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        `,</span><br><span class="line">            data() &#123;</span><br><span class="line">                return &#123;</span><br><span class="line">                    name: &#x27;清华大学&#x27;,</span><br><span class="line">                    address: &#x27;北京&#x27;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            //嵌套注册组件(局部)</span><br><span class="line">            //在哪里嵌套注册，就在哪里写组件结构</span><br><span class="line">            components: &#123;</span><br><span class="line">                student</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        //定义hello组件</span><br><span class="line">    const hello = Vue.extend(&#123;</span><br><span class="line">            name: &#x27;hello&#x27;,</span><br><span class="line">            template: `&lt;h1&gt;</span><br><span class="line">        &#123;&#123;msg&#125;&#125;</span><br><span class="line">    &lt;/h1&gt;`,</span><br><span class="line">            data() &#123;</span><br><span class="line">                return &#123;</span><br><span class="line">                    msg: &#x27;hello&#x27;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        //定义app组件,此处领导众多的组件</span><br><span class="line">    const app = Vue.extend(&#123;</span><br><span class="line">        template: `</span><br><span class="line">        &lt;div&gt;</span><br><span class="line"></span><br><span class="line">            &lt;hello&gt;&lt;/hello&gt;</span><br><span class="line">            &lt;school&gt;&lt;/school&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        `,</span><br><span class="line">        components: &#123;</span><br><span class="line"></span><br><span class="line">            school, //因为student组件已经嵌套进school里面了，所以此处不必调用</span><br><span class="line">            hello</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    new Vue(&#123;</span><br><span class="line">        el: &#x27;#root&#x27;,</span><br><span class="line">        template: `</span><br><span class="line">        &lt;app&gt;&lt;/app&gt;</span><br><span class="line">        `, //在此处也可以使用template</span><br><span class="line">        components: &#123;</span><br><span class="line">            app</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="VueComponent"><a href="#VueComponent" class="headerlink" title="VueComponent"></a>VueComponent</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- </span><br><span class="line">        关于VueComponent：</span><br><span class="line"></span><br><span class="line">            school组件本质是一个名为VueComponent的构造函数，且不是程序员定义的，是Vue.extend生成的</span><br><span class="line"></span><br><span class="line">            我们只需要写&lt;school/&gt;或&lt;school&gt;&lt;/school&gt;，Vue解析时会帮我们创建school组件的实例对象，即Vue帮我们执行的：new VueComponent(options)</span><br><span class="line"></span><br><span class="line">            特别注意：每次调用Vue.extend，返回的都是一个全新的VueComponent！</span><br><span class="line"></span><br><span class="line">            关于this指向：</span><br><span class="line"></span><br><span class="line">            组件配置中：data函数、methods中的函数、watch中的函数、computed中的函数 它们的this均是VueComponent实例对象</span><br><span class="line">            new Vue(options)配置中：data函数、methods中的函数、watch中的函数、computed中的函数 它们的this均是Vue实例对象</span><br><span class="line">            VueComponent的实例对象，以后简称vc（也可称之为：组件实例对象）</span><br><span class="line"></span><br><span class="line">            Vue的实例对象，以后简称vm</span><br><span class="line"></span><br><span class="line">     --&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;hello&gt;&lt;/hello&gt;</span><br><span class="line">        &lt;school&gt;&lt;/school&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    Vue.config.productionTip = false</span><br><span class="line">        //定义school组件</span><br><span class="line">    const school = Vue.extend(&#123;</span><br><span class="line">        name: &#x27;school&#x27;, //可以使用name配置项指定组件在开发者工具中呈现的名字s</span><br><span class="line">        template: `</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;h2&gt;学校名称：&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">            &lt;h2&gt;学校地址：&#123;&#123;address&#125;&#125;&lt;/h2&gt;</span><br><span class="line">          </span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        `,</span><br><span class="line">        data() &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                name: &#x27;清华大学&#x27;,</span><br><span class="line">                address: &#x27;北京&#x27;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    //定义test组件</span><br><span class="line">    const test = Vue.extend(&#123;</span><br><span class="line"></span><br><span class="line">            template: &#x27;&lt;span&gt;&#123;&#123;msg&#125;&#125;&lt;/span&gt;&#x27;,</span><br><span class="line">            data() &#123;</span><br><span class="line">                return &#123;</span><br><span class="line">                    msg: &#x27;清华大学&#x27;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        //定义hello组件</span><br><span class="line">    const hello = Vue.extend(&#123;</span><br><span class="line"></span><br><span class="line">        template: `&lt;div&gt;</span><br><span class="line">        &lt;test&gt;&lt;/test&gt;</span><br><span class="line">        &lt;h2&gt;&#123;&#123;msg&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        `,</span><br><span class="line">        data() &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                msg: &#x27;你好&#x27;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        components: &#123;</span><br><span class="line">            test</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    console.log(&#x27;@&#x27;, school)</span><br><span class="line">    console.log(&#x27;#&#x27;, hello)</span><br><span class="line"></span><br><span class="line">    const vm = new Vue(&#123;</span><br><span class="line">        el: &#x27;#root&#x27;,</span><br><span class="line">        components: &#123;</span><br><span class="line">            school,</span><br><span class="line">            hello</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="单文件组件"><a href="#单文件组件" class="headerlink" title="单文件组件"></a>单文件组件</h3><p>接下来的文件需要组合使用</p><h4 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- 先让模板出来再引入 App.vue --&gt;</span><br><span class="line">    &lt;!-- 准备一个容器 --&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;!-- 引入入口文件 --&gt;</span><br><span class="line">    &lt;script src=&quot;./main.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="main-js"><a href="#main-js" class="headerlink" title="main.js"></a>main.js</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import App from &#x27;./App.vue&#x27;</span><br><span class="line"></span><br><span class="line">new Vue(&#123;</span><br><span class="line">    el: &#x27;#root&#x27;,</span><br><span class="line">    template: `&lt;App&gt;&lt;/App&gt;`,</span><br><span class="line">    components: &#123;</span><br><span class="line">        App</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="School-vue"><a href="#School-vue" class="headerlink" title="School.vue"></a>School.vue</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line"> &lt;!-- 组件的结构 --&gt;</span><br><span class="line"> &lt;!-- 非单文件的弊端就是css不会跟着组件走 --&gt;</span><br><span class="line">&lt;div class=&quot;demo&quot;&gt;</span><br><span class="line">            &lt;h2&gt;学校名称：&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">            &lt;h2&gt;学校地址：&#123;&#123;address&#125;&#125;&lt;/h2&gt;</span><br><span class="line">           </span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    </span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">//组件交互相关的代码(数据、方法等等)</span><br><span class="line">   //一般使用默认暴露export default</span><br><span class="line">   //直接可以不使用vue.extend</span><br><span class="line">    export default&#123;</span><br><span class="line">        name:&#x27;School&#x27;,</span><br><span class="line">         data() &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                name: &#x27;清华大学&#x27;,</span><br><span class="line">                address: &#x27;北京&#x27;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            showX() &#123;</span><br><span class="line">                console.log(this.x) //this是school的实例对象vc</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">/* 组件的样式 */</span><br><span class="line">.demo&#123;</span><br><span class="line">    background-color: orange;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h4 id="Student-vue"><a href="#Student-vue" class="headerlink" title="Student.vue"></a>Student.vue</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line"> &lt;!-- 组件的结构 --&gt;</span><br><span class="line"> &lt;!-- 非单文件的弊端就是css不会跟着组件走 --&gt;</span><br><span class="line">&lt;div class=&quot;demo&quot;&gt;</span><br><span class="line">            &lt;h2&gt;学生姓名：&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">            &lt;h2&gt;学生年龄：&#123;&#123;age&#125;&#125;&lt;/h2&gt;</span><br><span class="line">            </span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    </span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">//组件交互相关的代码(数据、方法等等)</span><br><span class="line">   //一般使用默认暴露export default,然后想要在其他文件中引入此文件只需要写import....from....</span><br><span class="line">   //直接可以不使用vue.extend</span><br><span class="line">    export default&#123;</span><br><span class="line">        name:&#x27;Student&#x27;,</span><br><span class="line">         data() &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                name: &#x27;张三&#x27;,</span><br><span class="line">                age: 18</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="App-vue"><a href="#App-vue" class="headerlink" title="App.vue"></a>App.vue</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;School&gt;&lt;/School&gt;</span><br><span class="line">      &lt;Student&gt;&lt;/Student&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">//引入组件</span><br><span class="line">import School from &#x27;./School.vue&#x27;</span><br><span class="line">import Student from &#x27;./Student.vue&#x27;</span><br><span class="line">   //一般使用默认暴露export default,然后想要在其他文件中引入此文件只需要写import....from....</span><br><span class="line">    export default &#123;</span><br><span class="line">        name:&#x27;App&#x27;,</span><br><span class="line">        </span><br><span class="line">        components:&#123;</span><br><span class="line">            //注册组件</span><br><span class="line">            School,</span><br><span class="line">            Student</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="Vue的生命周期"><a href="#Vue的生命周期" class="headerlink" title="Vue的生命周期"></a>Vue的生命周期</h2><h3 id="引出生命周期的概念"><a href="#引出生命周期的概念" class="headerlink" title="引出生命周期的概念"></a>引出生命周期的概念</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- 总结：</span><br><span class="line"></span><br><span class="line">        生命周期：</span><br><span class="line"></span><br><span class="line">        又名：生命周期回调函数、生命周期函数、生命周期钩子,钩子的意思也就是说在vue运行到特定的周期时去做我们所设定的事情 </span><br><span class="line">        是什么：Vue在关键时刻帮我们调用的一些特殊名称的函数</span><br><span class="line">        生命周期函数的名字不可更改，但函数的具体内容是程序员根据需求编写的</span><br><span class="line">        生命周期函数中的this指向是vm 或 组件实例对象 --&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;!-- &#123;opacity:opacity&#125;第一个opacity是css属性名，第二个opacity是vue的数值 </span><br><span class="line">            但是可以简写成&#123;opacity&#125;</span><br><span class="line">        --&gt;</span><br><span class="line">        &lt;h2 :style=&quot;&#123;opacity&#125;&quot;&gt;欢迎学习Vue&lt;/h2&gt;</span><br><span class="line"></span><br><span class="line">        &lt;button @click=&quot;stop&quot;&gt;点我停止变换&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    Vue.config.productionTip = false</span><br><span class="line">    const vm = new Vue(&#123;</span><br><span class="line">        el: &#x27;#root&#x27;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            opacity: 1</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"></span><br><span class="line">            stop() &#123;</span><br><span class="line">                //clearInterval(this.timer)//响应this.timer</span><br><span class="line">                this.$destroy()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        //Vue完成模板的解析并把初始的真实DOM元素放入页面后(挂载完毕)调用mounted,也就是说mounted只调用一次 </span><br><span class="line">        mounted() &#123;</span><br><span class="line">            console.log(&#x27;mounted&#x27;)</span><br><span class="line">            console.log(&#x27;开启了定时器&#x27;)</span><br><span class="line">                //这里的this.timer相当于往vm中添加了一个timer的属性</span><br><span class="line">            this.timer = setInterval(() =&gt; &#123;</span><br><span class="line">                this.opacity -= 0.01</span><br><span class="line">                if (this.opacity &lt;= 0) this.opacity = 1</span><br><span class="line">            &#125;, 16)</span><br><span class="line">        &#125;,</span><br><span class="line">        beforeDestroy() &#123;</span><br><span class="line">            //使用钩子的好处就是在必要的流程上做自己想做的事情</span><br><span class="line">            console.log(&#x27;定时器停止&#x27;)</span><br><span class="line">            clearInterval(this.timer)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    //通过外部的定时器实现(不推荐)</span><br><span class="line">    /* setInterval(() =&gt; &#123;</span><br><span class="line">         vm.opacity -= 0.01</span><br><span class="line">         if (vm.opacity &lt;= 0) vm.opacity = 1</span><br><span class="line">     &#125;, 16)*/</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="分析生命周期"><a href="#分析生命周期" class="headerlink" title="分析生命周期"></a>分析生命周期</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- </span><br><span class="line">        总结：</span><br><span class="line"></span><br><span class="line">                常用的生命周期钩子：</span><br><span class="line"></span><br><span class="line">                        mounted：发送ajax请求、启动定时器、绑定自定义事件、订阅消息等初始化操作</span><br><span class="line"></span><br><span class="line">                        beforeDestroy：清除定时器、解绑自定义事件、取消订阅消息等收尾工作</span><br><span class="line"></span><br><span class="line">                关于销毁Vue实例：</span><br><span class="line"></span><br><span class="line">                        销毁后借助Vue开发者工具看不到任何信息</span><br><span class="line"></span><br><span class="line">                        销毁后自定义事件会失效，但原生DOM事件依然有效</span><br><span class="line"></span><br><span class="line">                        一般不会在beforeDestroy操作数据，因为即便操作数据，也不会再触发更新流程了</span><br><span class="line"></span><br><span class="line">     --&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;h2&gt; 当前n的值：&#123;&#123;n&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;button @click=&quot;add&quot;&gt;点我n+1&lt;/button&gt;</span><br><span class="line">        &lt;button @click=&quot;bye&quot;&gt;点我销毁vm&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    Vue.config.productionTip = false</span><br><span class="line">    const vm = new Vue(&#123;</span><br><span class="line">        el: &#x27;#root&#x27;,</span><br><span class="line">        //在vue中，可以使用 template作为模板，让vue去解析模板</span><br><span class="line">        /* template: ` </span><br><span class="line">         &lt;div&gt;</span><br><span class="line">         &lt;h2&gt; 当前n的值：&#123;&#123;n&#125;&#125;&lt;/h2&gt;</span><br><span class="line">         &lt;button @click=&quot;add&quot;&gt;点我n+1&lt;/button&gt; &lt;/div&gt;`,*/</span><br><span class="line">        data: &#123;</span><br><span class="line">            n: 1</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            add() &#123;</span><br><span class="line">                this.n++</span><br><span class="line">            &#125;,</span><br><span class="line">            bye() &#123;</span><br><span class="line">                console.log(&#x27;bye&#x27;)</span><br><span class="line">                this.$destroy() //vm.$destroy完全销毁一个实例，清理它与其它实例的连接</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        watch: &#123;</span><br><span class="line">            n() &#123;</span><br><span class="line">                console.log(&#x27;n变了&#x27;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        //挂载流程</span><br><span class="line">        //Vue完成模板的解析并把初始的真实DOM元素放入页面后(挂载完毕)调用mounted,也就是说mounted只调用一次 </span><br><span class="line">        beforeCreate() &#123;</span><br><span class="line">            //此处是创建数据代理和数据监测之前的操作</span><br><span class="line">            //此时无法通过vm访问到data中的数据、methods中的方法</span><br><span class="line">            console.log(&#x27;beforeCreate&#x27;)</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line">        created() &#123;</span><br><span class="line">            //此处是创建完数据代理和数据监测之后的操作</span><br><span class="line">            //此时可以通过vm访问到data中的数值，methods中配置的方法</span><br><span class="line">            console.log(&#x27;created&#x27;)</span><br><span class="line">        &#125;,</span><br><span class="line">        beforeMount() &#123;</span><br><span class="line">            //此时，页面呈现的是未经vue编译的dom结构，对所有的dom结构的操作，最终都不奏效</span><br><span class="line">            console.log(&#x27;beforeMount&#x27;)</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line">        mounted() &#123; //【重要的钩子】</span><br><span class="line">            //此时，页面中呈现的是经过vue编译的dom</span><br><span class="line">            //对dom的操作均有效，在此处可开启定时器，发送网络请求，订阅消息，绑定自定义时间等初始化操作 </span><br><span class="line">            console.log(&#x27;mounted&#x27;)</span><br><span class="line">                //console.log(this)//此处的this为真实dom</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        //更新流程</span><br><span class="line">        beforeUpdate() &#123;</span><br><span class="line">            //此时，在页面和数据尚未保持同步</span><br><span class="line">            console.log(&#x27;beforeUpdate&#x27;)</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line">        updated() &#123;</span><br><span class="line">            //此时，数据已更新完毕</span><br><span class="line">            //console.log(this.n)</span><br><span class="line">            console.log(&#x27;updated&#x27;)</span><br><span class="line">        &#125;,</span><br><span class="line">        beforeDestroy() &#123;</span><br><span class="line">            //【重要的钩子】</span><br><span class="line">            //此时,data，methods指令,等等都处于可用状态</span><br><span class="line">            //但是在此处就不要调用方法或修改数据，因为即使如此操作，在此阶段都不会奏效</span><br><span class="line">            //一般只能关闭定时器，取消订阅信息，解绑自定义事件等收尾操作</span><br><span class="line">            console.log(&#x27;beforeDestroy&#x27;)</span><br><span class="line">            console.log(this.n)</span><br><span class="line">        &#125;,</span><br><span class="line">        destroyed() &#123;</span><br><span class="line">            console.log(&#x27;destroyed&#x27;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>以上内容为Vue的基础部分的知识学习笔记，如果觉得这篇文章还行，在评论区留下你的赞赏评论！</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>腾讯云开发工程师认证</title>
      <link href="/courage/posts/fc992f84422f/"/>
      <url>/courage/posts/fc992f84422f/</url>
      
        <content type="html"><![CDATA[<p>腾讯云开发工程师认证必读教程</p><span id="more"></span><h1 id="云开发基础"><a href="#云开发基础" class="headerlink" title="云开发基础"></a>云开发基础</h1><h2 id="1-1传统it架构特点"><a href="#1-1传统it架构特点" class="headerlink" title="1.1传统it架构特点"></a>1.1传统it架构特点</h2><h3 id="企业信息化建设"><a href="#企业信息化建设" class="headerlink" title="企业信息化建设"></a>企业信息化建设</h3><p>1.需求明确</p><p>2.用户规模小</p><p>3.迭代升级慢</p><p>4.技术复杂度低</p><p>5.需求变化慢</p><p>6.企业内部应用</p><h3 id="传统开发模式"><a href="#传统开发模式" class="headerlink" title="传统开发模式"></a>传统开发模式</h3><p>1.瀑布开发模型：标准化，阶段清晰，环环相扣</p><p><img src="/courage/images/pasted-1.png" alt="upload successful"><br>2.单体架构：开发速度快，成本低</p><p><img src="/courage/images/pasted-2.png" alt="upload successful"></p><h2 id="1-2业务驱动下的IT架构变革"><a href="#1-2业务驱动下的IT架构变革" class="headerlink" title="1.2业务驱动下的IT架构变革"></a>1.2业务驱动下的IT架构变革</h2><p><img src="/courage/images/pasted-4.png" alt="upload successful"></p><p><img src="/courage/images/pasted-3.png" alt="upload successful"></p><h3 id="硬件基础设施"><a href="#硬件基础设施" class="headerlink" title="硬件基础设施"></a>硬件基础设施</h3><p><img src="/courage/images/pasted-5.png" alt="upload successful"></p><p><img src="/courage/images/pasted-6.png" alt="upload successful"></p><h3 id="软件架构的改变"><a href="#软件架构的改变" class="headerlink" title="软件架构的改变"></a>软件架构的改变</h3><p><img src="/courage/images/pasted-7.png" alt="upload successful"></p><h2 id="1-3-“互联网-”带来的挑战"><a href="#1-3-“互联网-”带来的挑战" class="headerlink" title="1.3 “互联网+”带来的挑战"></a>1.3 “互联网+”带来的挑战</h2><h3 id="业务特征"><a href="#业务特征" class="headerlink" title="业务特征"></a>业务特征</h3><p><img src="/courage/images/pasted-8.png" alt="upload successful"></p><p><img src="/courage/images/pasted-10.png" alt="upload successful"></p><h2 id="1-4-云计算简介"><a href="#1-4-云计算简介" class="headerlink" title="1.4 云计算简介"></a>1.4 云计算简介</h2><p>云计算是一种新的资源按需租用的服务模式；</p><p>一种新型的互联网数据中心业务</p><p><img src="/courage/images/pasted-11.png" alt="upload successful"></p><h3 id="传统IDC与云计算的区别"><a href="#传统IDC与云计算的区别" class="headerlink" title="传统IDC与云计算的区别"></a>传统IDC与云计算的区别</h3><p><img src="/courage/images/pasted-12.png" alt="upload successful"><br><img src="/courage/images/pasted-13.png" alt="upload successful"></p><h3 id="云计算的特征"><a href="#云计算的特征" class="headerlink" title="云计算的特征"></a>云计算的特征</h3><p>特征：超大规模，高可靠性，多租户隔离，弹性扩展，按需服务，资源可监控计量，低成本</p><p><img src="/courage/images/pasted-14.png" alt="upload successful"></p><h3 id="云计算的服务模式"><a href="#云计算的服务模式" class="headerlink" title="云计算的服务模式"></a>云计算的服务模式</h3><p>模式：SaaS，PaaS，laaS<br><img src="/courage/images/pasted-15.png" alt="upload successful"></p><h2 id="1-5-云计算解决的问题"><a href="#1-5-云计算解决的问题" class="headerlink" title="1.5 云计算解决的问题"></a>1.5 云计算解决的问题</h2><p><img src="/courage/images/pasted-16.png" alt="upload successful"></p><h3 id="用户关注点的区别"><a href="#用户关注点的区别" class="headerlink" title="用户关注点的区别"></a>用户关注点的区别</h3><p><img src="/courage/images/pasted-17.png" alt="upload successful"></p><h3 id="仍然存在的问题"><a href="#仍然存在的问题" class="headerlink" title="仍然存在的问题"></a>仍然存在的问题</h3><p><img src="/courage/images/pasted-18.png" alt="upload successful"></p><h2 id="1-6-云时代开发方式"><a href="#1-6-云时代开发方式" class="headerlink" title="1.6 云时代开发方式"></a>1.6 云时代开发方式</h2><p><img src="/courage/images/pasted-19.png" alt="upload successful"></p><h3 id="开发模式演变"><a href="#开发模式演变" class="headerlink" title="开发模式演变"></a>开发模式演变</h3><p><img src="/courage/images/pasted-20.png" alt="upload successful"></p><p><img src="/courage/images/pasted-21.png" alt="upload successful"></p><h3 id="演变-微服务架构"><a href="#演变-微服务架构" class="headerlink" title="演变-微服务架构"></a>演变-微服务架构</h3><p><img src="/courage/images/pasted-22.png" alt="upload successful"></p><p><img src="/courage/images/pasted-23.png" alt="upload successful"></p><h3 id="软件架构演变"><a href="#软件架构演变" class="headerlink" title="软件架构演变"></a>软件架构演变</h3><p>无服务器：不是说没有服务器，只是不用太过关心服务器，而是关心相关的代码、方法或是函数</p><p><img src="/courage/images/pasted-24.png" alt="upload successful"></p><h3 id="传统应用跟云端应用区别"><a href="#传统应用跟云端应用区别" class="headerlink" title="传统应用跟云端应用区别"></a>传统应用跟云端应用区别</h3><p><img src="/courage/images/pasted-25.png" alt="upload successful"></p><h3 id="技术栈的区别"><a href="#技术栈的区别" class="headerlink" title="技术栈的区别"></a>技术栈的区别</h3><p><img src="/courage/images/pasted-26.png" alt="upload successful"></p><h3 id="云时代开发分类"><a href="#云时代开发分类" class="headerlink" title="云时代开发分类"></a>云时代开发分类</h3><h1 id="云开发入门"><a href="#云开发入门" class="headerlink" title="云开发入门"></a>云开发入门</h1><p><img src="/courage/images/pasted-27.png" alt="upload successful"></p><h2 id="2-1腾讯云简介"><a href="#2-1腾讯云简介" class="headerlink" title="2.1腾讯云简介"></a>2.1腾讯云简介</h2><p><img src="/courage/images/pasted-28.png" alt="upload successful"></p><p><img src="/courage/images/pasted-35.png" alt="upload successful"></p><p><img src="/courage/images/pasted-37.png" alt="upload successful"></p><h3 id="大规模运营经验"><a href="#大规模运营经验" class="headerlink" title="大规模运营经验"></a>大规模运营经验</h3><p><img src="/courage/images/pasted-33.png" alt="upload successful"></p><h3 id="采购能力"><a href="#采购能力" class="headerlink" title="采购能力"></a>采购能力</h3><p><img src="/courage/images/pasted-39.png" alt="upload successful"></p><h3 id="服务提供能力"><a href="#服务提供能力" class="headerlink" title="服务提供能力"></a>服务提供能力</h3><p><img src="/courage/images/pasted-40.png" alt="upload successful"></p><h2 id="2-2-云管理平台及云产品概览"><a href="#2-2-云管理平台及云产品概览" class="headerlink" title="2.2 云管理平台及云产品概览"></a>2.2 云管理平台及云产品概览</h2><h3 id="VStation云计算管理平台"><a href="#VStation云计算管理平台" class="headerlink" title="VStation云计算管理平台"></a>VStation云计算管理平台</h3><p><img src="/courage/images/pasted-41.png" alt="upload successful"></p><p><img src="/courage/images/pasted-42.png" alt="upload successful"></p><p><img src="/courage/images/pasted-43.png" alt="upload successful"></p><h3 id="云产品概览"><a href="#云产品概览" class="headerlink" title="云产品概览"></a>云产品概览</h3><p><img src="/courage/images/pasted-44.png" alt="upload successful"></p><p><img src="/courage/images/pasted-45.png" alt="upload successful"></p><h2 id="2-3-腾讯云全球基础设施简介"><a href="#2-3-腾讯云全球基础设施简介" class="headerlink" title="2.3 腾讯云全球基础设施简介"></a>2.3 腾讯云全球基础设施简介</h2><p><img src="/courage/images/pasted-46.png" alt="upload successful"></p><h3 id="地域与可用区"><a href="#地域与可用区" class="headerlink" title="地域与可用区"></a>地域与可用区</h3><p><img src="/courage/images/pasted-48.png" alt="upload successful"></p><p><img src="/courage/images/pasted-50.png" alt="upload successful"></p><p><img src="/courage/images/pasted-51.png" alt="upload successful"></p><h2 id="2-4-开发接入流程"><a href="#2-4-开发接入流程" class="headerlink" title="2.4 开发接入流程"></a>2.4 开发接入流程</h2><h3 id="开发接入流程"><a href="#开发接入流程" class="headerlink" title="开发接入流程"></a>开发接入流程</h3><p><img src="/courage/images/pasted-52.png" alt="upload successful"></p><h3 id="获取主账号"><a href="#获取主账号" class="headerlink" title="获取主账号"></a>获取主账号</h3><p><img src="/courage/images/pasted-55.png" alt="upload successful"></p><p><img src="/courage/images/pasted-56.png" alt="upload successful"></p><h3 id="账号分类"><a href="#账号分类" class="headerlink" title="账号分类"></a>账号分类</h3><p><img src="/courage/images/pasted-57.png" alt="upload successful"><br>由于权限过大，所以实际开发时不推荐使用主账号！！！</p><p><img src="/courage/images/pasted-58.png" alt="upload successful"></p><h2 id="2-5-云产品的使用方式"><a href="#2-5-云产品的使用方式" class="headerlink" title="2.5 云产品的使用方式"></a>2.5 云产品的使用方式</h2><p><img src="/courage/images/pasted-59.png" alt="upload successful"></p><h3 id="SDK方式"><a href="#SDK方式" class="headerlink" title="SDK方式"></a>SDK方式</h3><p><img src="/courage/images/pasted-60.png" alt="upload successful"></p><p><img src="/courage/images/pasted-61.png" alt="upload successful"></p><h3 id="API方式"><a href="#API方式" class="headerlink" title="API方式"></a>API方式</h3><p><img src="/courage/images/pasted-62.png" alt="upload successful"></p><h2 id="2-6-账号使用与安全"><a href="#2-6-账号使用与安全" class="headerlink" title="2.6 账号使用与安全"></a>2.6 账号使用与安全</h2><h3 id="访问管理CAM"><a href="#访问管理CAM" class="headerlink" title="访问管理CAM"></a>访问管理CAM</h3><p><img src="/courage/images/pasted-63.png" alt="upload successful"></p><h3 id="CAM概念关系"><a href="#CAM概念关系" class="headerlink" title="CAM概念关系"></a>CAM概念关系</h3><p><img src="/courage/images/pasted-64.png" alt="upload successful"></p><p><img src="/courage/images/pasted-65.png" alt="upload successful"></p><p><img src="/courage/images/pasted-66.png" alt="upload successful"></p><h3 id="创建子账号流程"><a href="#创建子账号流程" class="headerlink" title="创建子账号流程"></a>创建子账号流程</h3><p><img src="/courage/images/pasted-67.png" alt="upload successful"></p><h3 id="CAM最佳实践"><a href="#CAM最佳实践" class="headerlink" title="CAM最佳实践"></a>CAM最佳实践</h3><p><img src="/courage/images/pasted-68.png" alt="upload successful"></p><h3 id="本地开发环境"><a href="#本地开发环境" class="headerlink" title="本地开发环境"></a>本地开发环境</h3><p><img src="/courage/images/pasted-69.png" alt="upload successful"></p><h3 id="云端开发环境"><a href="#云端开发环境" class="headerlink" title="云端开发环境"></a>云端开发环境</h3><p><img src="/courage/images/pasted-70.png" alt="upload successful"></p><h2 id="2-8-云API概述"><a href="#2-8-云API概述" class="headerlink" title="2.8 云API概述"></a>2.8 云API概述</h2><p>云API是腾讯云开放生态的基石</p><p><img src="/courage/images/pasted-71.png" alt="upload successful"></p><h3 id="功能组合"><a href="#功能组合" class="headerlink" title="功能组合"></a>功能组合</h3><p>可以将常用或是需要经常复用的API组合封装成一个整体的API</p><p><img src="/courage/images/pasted-72.png" alt="upload successful"></p><h3 id="定制化需求"><a href="#定制化需求" class="headerlink" title="定制化需求"></a>定制化需求</h3><p><img src="/courage/images/pasted-73.png" alt="upload successful"></p><h2 id="2-9-云API请求结构"><a href="#2-9-云API请求结构" class="headerlink" title="2.9 云API请求结构"></a>2.9 云API请求结构</h2><p><img src="/courage/images/pasted-74.png" alt="upload successful"></p><h3 id="请求方法"><a href="#请求方法" class="headerlink" title="请求方法"></a>请求方法</h3><p><img src="/courage/images/pasted-75.png" alt="upload successful"></p><h3 id="服务地址"><a href="#服务地址" class="headerlink" title="服务地址"></a>服务地址</h3><p>支持就近地域接入，会自动解析并最近区域云服务器，从而降低时延</p><p><img src="/courage/images/pasted-76.png" alt="upload successful"></p><h3 id="公共参数"><a href="#公共参数" class="headerlink" title="公共参数"></a>公共参数</h3><p>公共参数用来标识用户和接口鉴权的参数</p><p>推荐使用v3的签名方法，与API3.0相对应</p><p><img src="/courage/images/pasted-77.png" alt="upload successful"></p><h3 id="签名方法v3"><a href="#签名方法v3" class="headerlink" title="签名方法v3"></a>签名方法v3</h3><p>v3的签名方法使用的是TC3-HMAC-SHA256</p><p><img src="/courage/images/pasted-78.png" alt="upload successful"></p><h3 id="地域列表"><a href="#地域列表" class="headerlink" title="地域列表"></a>地域列表</h3><p>Region参数所指的是地域</p><p><img src="/courage/images/pasted-79.png" alt="upload successful"></p><h3 id="云API接口鉴权"><a href="#云API接口鉴权" class="headerlink" title="云API接口鉴权"></a>云API接口鉴权</h3><p>腾讯云API会对每个访问请求进行身份验证</p><p>安全凭证包括SecretId和SecretKey</p><p><img src="/courage/images/pasted-80.png" alt="upload successful"></p><h3 id="鉴权分类"><a href="#鉴权分类" class="headerlink" title="鉴权分类"></a>鉴权分类</h3><p><img src="/courage/images/pasted-81.png" alt="upload successful"></p><h3 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h3><p><img src="/courage/images/pasted-82.png" alt="upload successful"></p><h3 id="签名失败以及错误码"><a href="#签名失败以及错误码" class="headerlink" title="签名失败以及错误码"></a>签名失败以及错误码</h3><p><img src="/courage/images/pasted-83.png" alt="upload successful"></p><h2 id="2-10-API-3-0-Explorer"><a href="#2-10-API-3-0-Explorer" class="headerlink" title="2.10 API 3.0 Explorer"></a>2.10 API 3.0 Explorer</h2><p>API 3.0 Explorer可以用来简化签名流程</p><p><img src="/courage/images/pasted-84.png" alt="upload successful"></p><p><img src="/courage/images/pasted-85.png" alt="upload successful"></p><p><img src="/courage/images/pasted-86.png" alt="upload successful"></p><p><img src="/courage/images/pasted-87.png" alt="upload successful"></p><h1 id="本地应用迁移到云端"><a href="#本地应用迁移到云端" class="headerlink" title="本地应用迁移到云端"></a>本地应用迁移到云端</h1><h2 id="3-1本地使用上云的基础"><a href="#3-1本地使用上云的基础" class="headerlink" title="3.1本地使用上云的基础"></a>3.1本地使用上云的基础</h2><p><img src="/courage/images/pasted-88.png" alt="upload successful"></p><p><img src="/courage/images/pasted-89.png" alt="upload successful"></p><h3 id="本地应用上云的优势"><a href="#本地应用上云的优势" class="headerlink" title="本地应用上云的优势"></a>本地应用上云的优势</h3><p><img src="/courage/images/pasted-90.png" alt="upload successful"></p><h3 id="基本步骤"><a href="#基本步骤" class="headerlink" title="基本步骤"></a>基本步骤</h3><p><img src="/courage/images/pasted-91.png" alt="upload successful"></p><h2 id="3-2-应用迁移上云场景介绍"><a href="#3-2-应用迁移上云场景介绍" class="headerlink" title="3.2 应用迁移上云场景介绍"></a>3.2 应用迁移上云场景介绍</h2><p><img src="/courage/images/pasted-92.png" alt="upload successful"></p><h3 id="迁移方案"><a href="#迁移方案" class="headerlink" title="迁移方案"></a>迁移方案</h3><p><img src="/courage/images/pasted-94.png" alt="upload successful"></p><h3 id="本地应用迁移上云后架构"><a href="#本地应用迁移上云后架构" class="headerlink" title="本地应用迁移上云后架构"></a>本地应用迁移上云后架构</h3><p><img src="/courage/images/pasted-95.png" alt="upload successful"></p><h2 id="3-3-云服务器简介"><a href="#3-3-云服务器简介" class="headerlink" title="3.3 云服务器简介"></a>3.3 云服务器简介</h2><p><img src="/courage/images/pasted-96.png" alt="upload successful"></p><h3 id="云服务器CVM"><a href="#云服务器CVM" class="headerlink" title="云服务器CVM"></a>云服务器CVM</h3><p><img src="/courage/images/pasted-97.png" alt="upload successful"></p><p><img src="/courage/images/pasted-98.png" alt="upload successful"></p><h3 id="云服务器CVM概念关系"><a href="#云服务器CVM概念关系" class="headerlink" title="云服务器CVM概念关系"></a>云服务器CVM概念关系</h3><p>实例就是云服务器</p><p><img src="/courage/images/pasted-99.png" alt="upload successful"></p><h3 id="云服务器的存储"><a href="#云服务器的存储" class="headerlink" title="云服务器的存储"></a>云服务器的存储</h3><p><img src="/courage/images/pasted-100.png" alt="upload successful"></p><h3 id="块存储设备映射"><a href="#块存储设备映射" class="headerlink" title="块存储设备映射"></a>块存储设备映射</h3><p><img src="/courage/images/pasted-101.png" alt="upload successful"></p><h3 id="API概览"><a href="#API概览" class="headerlink" title="API概览"></a>API概览</h3><p><img src="/courage/images/pasted-102.png" alt="upload successful"></p><h3 id="常用API接口"><a href="#常用API接口" class="headerlink" title="常用API接口"></a>常用API接口</h3><p><img src="/courage/images/pasted-103.png" alt="upload successful"></p><h3 id="SDK访问CVM基础"><a href="#SDK访问CVM基础" class="headerlink" title="SDK访问CVM基础"></a>SDK访问CVM基础</h3><p>可以使用python，java，go等多个SDK</p><p><img src="/courage/images/pasted-104.png" alt="upload successful"></p><p><img src="/courage/images/pasted-105.png" alt="upload successful"></p><h3 id="SDK新建CVM实例"><a href="#SDK新建CVM实例" class="headerlink" title="SDK新建CVM实例"></a>SDK新建CVM实例</h3><p><img src="/courage/images/pasted-106.png" alt="upload successful"></p><h3 id="CVM最佳实践"><a href="#CVM最佳实践" class="headerlink" title="CVM最佳实践"></a>CVM最佳实践</h3><p><img src="/courage/images/pasted-107.png" alt="upload successful"></p><h2 id="3-4-本地应用迁移上云流程"><a href="#3-4-本地应用迁移上云流程" class="headerlink" title="3.4 本地应用迁移上云流程"></a>3.4 本地应用迁移上云流程</h2><p><img src="/courage/images/pasted-108.png" alt="upload successful"></p><p><img src="/courage/images/pasted-109.png" alt="upload successful"></p><h2 id="3-5-本地应用迁移上云-实验"><a href="#3-5-本地应用迁移上云-实验" class="headerlink" title="3.5 本地应用迁移上云-实验"></a>3.5 本地应用迁移上云-实验</h2><p>此步为购买服务器流程，具体细节可以到控制台查看</p><h3 id="1-此处使用的是Java的JDK和tomcat"><a href="#1-此处使用的是Java的JDK和tomcat" class="headerlink" title="1.此处使用的是Java的JDK和tomcat"></a>1.此处使用的是Java的JDK和tomcat</h3><p><img src="/courage/images/pasted-110.png" alt="upload successful"></p><h3 id="2-在云服务器上安装mysql数据库"><a href="#2-在云服务器上安装mysql数据库" class="headerlink" title="2.在云服务器上安装mysql数据库"></a>2.在云服务器上安装mysql数据库</h3><p><img src="/courage/images/pasted-111.png" alt="upload successful"></p><h3 id="3-挂载云硬盘到mysql服务的云服务器中"><a href="#3-挂载云硬盘到mysql服务的云服务器中" class="headerlink" title="3.挂载云硬盘到mysql服务的云服务器中"></a>3.挂载云硬盘到mysql服务的云服务器中</h3><p><img src="/courage/images/pasted-113.png" alt="upload successful"></p><h3 id="4-把mysql数据库保存到云硬盘中"><a href="#4-把mysql数据库保存到云硬盘中" class="headerlink" title="4.把mysql数据库保存到云硬盘中"></a>4.把mysql数据库保存到云硬盘中</h3><p><img src="/courage/images/pasted-112.png" alt="upload successful"></p><h3 id="5-修改应用配置，上传并启动应用"><a href="#5-修改应用配置，上传并启动应用" class="headerlink" title="5.修改应用配置，上传并启动应用"></a>5.修改应用配置，上传并启动应用</h3><p><img src="/courage/images/pasted-114.png" alt="upload successful"></p><h2 id="3-6-负载均衡"><a href="#3-6-负载均衡" class="headerlink" title="3.6 负载均衡"></a>3.6 负载均衡</h2><p><img src="/courage/images/pasted-115.png" alt="upload successful"></p><h3 id="负载均衡CLB简介"><a href="#负载均衡CLB简介" class="headerlink" title="负载均衡CLB简介"></a>负载均衡CLB简介</h3><p><img src="/courage/images/pasted-116.png" alt="upload successful"></p><p><img src="/courage/images/pasted-117.png" alt="upload successful"></p><h3 id="负载均衡的CLB分类"><a href="#负载均衡的CLB分类" class="headerlink" title="负载均衡的CLB分类"></a>负载均衡的CLB分类</h3><p><img src="/courage/images/pasted-118.png" alt="upload successful"></p><h3 id="负载均衡的CLB使用步骤"><a href="#负载均衡的CLB使用步骤" class="headerlink" title="负载均衡的CLB使用步骤"></a>负载均衡的CLB使用步骤</h3><p><img src="/courage/images/pasted-119.png" alt="upload successful"></p><h3 id="负载均衡API概览"><a href="#负载均衡API概览" class="headerlink" title="负载均衡API概览"></a>负载均衡API概览</h3><p><img src="/courage/images/pasted-120.png" alt="upload successful"></p><h3 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h3><p><img src="/courage/images/pasted-121.png" alt="upload successful"><br>长时间进行连接的使用加权最小连接数算法</p><p>需要会话保持的，使用源地址散列调度算法</p><p>用户请求时间大致相同时，使用加权轮询<br><img src="/courage/images/pasted-122.png" alt="upload successful">算法</p><p><img src="/courage/images/pasted-122.png" alt="upload successful"></p><h2 id="3-7弹性伸缩"><a href="#3-7弹性伸缩" class="headerlink" title="3.7弹性伸缩"></a>3.7弹性伸缩</h2><p><img src="/courage/images/pasted-123.png" alt="upload successful"></p><p><img src="/courage/images/pasted-124.png" alt="upload successful"></p><h3 id="弹性伸缩AS的优势"><a href="#弹性伸缩AS的优势" class="headerlink" title="弹性伸缩AS的优势"></a>弹性伸缩AS的优势</h3><p><img src="/courage/images/pasted-125.png" alt="upload successful"></p><h3 id="弹性伸缩AS的使用步骤"><a href="#弹性伸缩AS的使用步骤" class="headerlink" title="弹性伸缩AS的使用步骤"></a>弹性伸缩AS的使用步骤</h3><p>可以通过告警或者是定时任务触发弹性伸缩</p><p><img src="/courage/images/pasted-126.png" alt="upload successful"></p><p><img src="/courage/images/pasted-127.png" alt="upload successful"></p><h3 id="弹性伸缩AS最佳实践"><a href="#弹性伸缩AS最佳实践" class="headerlink" title="弹性伸缩AS最佳实践"></a>弹性伸缩AS最佳实践</h3><p><img src="/courage/images/pasted-128.png" alt="upload successful"></p><h2 id="3-8-弹性伸缩-实验"><a href="#3-8-弹性伸缩-实验" class="headerlink" title="3.8 弹性伸缩-实验"></a>3.8 弹性伸缩-实验</h2><h3 id="1-创建文件共享存储"><a href="#1-创建文件共享存储" class="headerlink" title="1.创建文件共享存储"></a>1.创建文件共享存储</h3><p><img src="/courage/images/pasted-129.png" alt="upload successful"></p><h3 id="2-挂载文件系统"><a href="#2-挂载文件系统" class="headerlink" title="2.挂载文件系统"></a>2.挂载文件系统</h3><p><img src="/courage/images/pasted-130.png" alt="upload successful"></p><h3 id="3-修改应用中图片的上传路径配置"><a href="#3-修改应用中图片的上传路径配置" class="headerlink" title="3.修改应用中图片的上传路径配置"></a>3.修改应用中图片的上传路径配置</h3><p><img src="/courage/images/pasted-131.png" alt="upload successful"></p><h3 id="4-创建集群机器的自定义镜像"><a href="#4-创建集群机器的自定义镜像" class="headerlink" title="4.创建集群机器的自定义镜像"></a>4.创建集群机器的自定义镜像</h3><p>包括操作系统以及应用环境</p><h3 id="5-创建弹性伸缩启动配置"><a href="#5-创建弹性伸缩启动配置" class="headerlink" title="5.创建弹性伸缩启动配置"></a>5.创建弹性伸缩启动配置</h3><p><img src="/courage/images/pasted-132.png" alt="upload successful"></p><h3 id="6-创建伸缩组"><a href="#6-创建伸缩组" class="headerlink" title="6.创建伸缩组"></a>6.创建伸缩组</h3><p><img src="/courage/images/pasted-133.png" alt="upload successful"></p><h3 id="7-创建定时任务触发弹性伸缩"><a href="#7-创建定时任务触发弹性伸缩" class="headerlink" title="7.创建定时任务触发弹性伸缩"></a>7.创建定时任务触发弹性伸缩</h3><p><img src="/courage/images/pasted-134.png" alt="upload successful"></p><h2 id="3-9-存储扩容"><a href="#3-9-存储扩容" class="headerlink" title="3.9 存储扩容"></a>3.9 存储扩容</h2><p><img src="/courage/images/pasted-135.png" alt="upload successful"></p><h3 id="腾讯云存储产品概述"><a href="#腾讯云存储产品概述" class="headerlink" title="腾讯云存储产品概述"></a>腾讯云存储产品概述</h3><p><img src="/courage/images/pasted-136.png" alt="upload successful"></p><h3 id="云硬盘产品概述"><a href="#云硬盘产品概述" class="headerlink" title="云硬盘产品概述"></a>云硬盘产品概述</h3><p><img src="/courage/images/pasted-137.png" alt="upload successful"></p><h3 id="云硬盘产品分类"><a href="#云硬盘产品分类" class="headerlink" title="云硬盘产品分类"></a>云硬盘产品分类</h3><p><img src="/courage/images/pasted-138.png" alt="upload successful"></p><h3 id="云硬盘扩容方式"><a href="#云硬盘扩容方式" class="headerlink" title="云硬盘扩容方式"></a>云硬盘扩容方式</h3><p><img src="/courage/images/pasted-139.png" alt="upload successful"></p><h3 id="云硬盘API概览"><a href="#云硬盘API概览" class="headerlink" title="云硬盘API概览"></a>云硬盘API概览</h3><p><img src="/courage/images/pasted-140.png" alt="upload successful"></p><h3 id="云硬盘最佳实践"><a href="#云硬盘最佳实践" class="headerlink" title="云硬盘最佳实践"></a>云硬盘最佳实践</h3><p><img src="/courage/images/pasted-141.png" alt="upload successful"></p><h3 id="文件存储CFS"><a href="#文件存储CFS" class="headerlink" title="文件存储CFS"></a>文件存储CFS</h3><p><img src="/courage/images/pasted-142.png" alt="upload successful"></p><h3 id="文件存储与云硬盘区别"><a href="#文件存储与云硬盘区别" class="headerlink" title="文件存储与云硬盘区别"></a>文件存储与云硬盘区别</h3><p><img src="/courage/images/pasted-143.png" alt="upload successful"></p><h3 id="文件存储使用步骤"><a href="#文件存储使用步骤" class="headerlink" title="文件存储使用步骤"></a>文件存储使用步骤</h3><p><img src="/courage/images/pasted-144.png" alt="upload successful"></p><h2 id="3-10-云硬盘扩容-实验"><a href="#3-10-云硬盘扩容-实验" class="headerlink" title="3.10 云硬盘扩容-实验"></a>3.10 云硬盘扩容-实验</h2><p>1.模拟数据盘被占满的情况<br><img src="/courage/images/pasted-145.png" alt="upload successful"><br>2.重启mysql服务</p><p><img src="/courage/images/pasted-146.png" alt="upload successful"><br>3.云服务器控制台扩容</p><p><img src="/courage/images/pasted-147.png" alt="upload successful"><br>4.扩展分区及文件系统</p><p><img src="/courage/images/pasted-148.png" alt="upload successful"><br>5.重启mysql服务</p><p><img src="/courage/images/pasted-149.png" alt="upload successful"><br>实验结果为成功访问服务器</p><h2 id="3-11本地应用上云后仍然存在的问题"><a href="#3-11本地应用上云后仍然存在的问题" class="headerlink" title="3.11本地应用上云后仍然存在的问题"></a>3.11本地应用上云后仍然存在的问题</h2><p><img src="/courage/images/pasted-150.png" alt="upload successful"></p><h1 id="云端应用开发"><a href="#云端应用开发" class="headerlink" title="云端应用开发"></a>云端应用开发</h1><h2 id="4-1数据库简介"><a href="#4-1数据库简介" class="headerlink" title="4.1数据库简介"></a>4.1数据库简介</h2><p>组织方式：</p><p>关系型数据库需要处理数据模型，例如Mysql</p><p>非关系型数据库则不需要处理数据模型，例如MongoDB</p><p>架构方式：</p><p>集中式数据库就是数据库分配到一台服务器上</p><p>分布式数据库就是数据库分配到多台服务器上</p><p><img src="/courage/images/pasted-175.png" alt="upload successful"></p><p><img src="/courage/images/pasted-176.png" alt="upload successful"></p><h3 id="CDB"><a href="#CDB" class="headerlink" title="CDB"></a>CDB</h3><p><img src="/courage/images/pasted-177.png" alt="upload successful"></p><h2 id="4-2云数据库mysql"><a href="#4-2云数据库mysql" class="headerlink" title="4.2云数据库mysql"></a>4.2云数据库mysql</h2><p><img src="/courage/images/pasted-178.png" alt="upload successful"></p><p><img src="/courage/images/pasted-180.png" alt="upload successful"></p><h3 id="使用云数据库mysql替代自建mysql"><a href="#使用云数据库mysql替代自建mysql" class="headerlink" title="使用云数据库mysql替代自建mysql"></a>使用云数据库mysql替代自建mysql</h3><p><img src="/courage/images/pasted-181.png" alt="upload successful"><br>云数据库mysql的使用</p><p><img src="/courage/images/pasted-182.png" alt="upload successful"></p><h2 id="4-3-数据迁移"><a href="#4-3-数据迁移" class="headerlink" title="4.3 数据迁移"></a>4.3 数据迁移</h2><p><img src="/courage/images/pasted-183.png" alt="upload successful"></p><h3 id="数据迁移到云数据库mysql方案"><a href="#数据迁移到云数据库mysql方案" class="headerlink" title="数据迁移到云数据库mysql方案"></a>数据迁移到云数据库mysql方案</h3><p><img src="/courage/images/pasted-184.png" alt="upload successful"></p><h3 id="sql文件导入"><a href="#sql文件导入" class="headerlink" title="sql文件导入"></a>sql文件导入</h3><p><img src="/courage/images/pasted-185.png" alt="upload successful"></p><p><img src="/courage/images/pasted-186.png" alt="upload successful"></p><h3 id="使用DTS在线导入"><a href="#使用DTS在线导入" class="headerlink" title="使用DTS在线导入"></a>使用DTS在线导入</h3><p>新建导入案例后，按照提示输入本地数据库的相关信息，测试数据库时需通过，若无法通过测试，则查看帮助文档。入完成后需点击右侧的完成按钮，否则仍会处于传输状态</p><p><img src="/courage/images/pasted-187.png" alt="upload successful"></p><h2 id="4-4-读写分离"><a href="#4-4-读写分离" class="headerlink" title="4.4 读写分离"></a>4.4 读写分离</h2><p><img src="/courage/images/pasted-188.png" alt="upload successful"><br>云数据库只有一个主数据库和多个从数据库</p><p><img src="/courage/images/pasted-189.png" alt="upload successful"></p><h3 id="云数据库mysql只读实例"><a href="#云数据库mysql只读实例" class="headerlink" title="云数据库mysql只读实例"></a>云数据库mysql只读实例</h3><p><img src="/courage/images/pasted-190.png" alt="upload successful"></p><h3 id="只读实例的使用步骤"><a href="#只读实例的使用步骤" class="headerlink" title="只读实例的使用步骤"></a>只读实例的使用步骤</h3><p><img src="/courage/images/pasted-191.png" alt="upload successful"></p><h3 id="读写分离实现步骤"><a href="#读写分离实现步骤" class="headerlink" title="读写分离实现步骤"></a>读写分离实现步骤</h3><p><img src="/courage/images/pasted-192.png" alt="upload successful"></p><h3 id="架构的变化"><a href="#架构的变化" class="headerlink" title="架构的变化"></a>架构的变化</h3><p>创建只读实例可以极大提高负载能力</p><p>适用于当前的读大于写的场景</p><p><img src="/courage/images/pasted-193.png" alt="upload successful"></p><h2 id="4-5云数据库mysql的整合实验"><a href="#4-5云数据库mysql的整合实验" class="headerlink" title="4.5云数据库mysql的整合实验"></a>4.5云数据库mysql的整合实验</h2><h3 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h3><p><img src="/courage/images/pasted-194.png" alt="upload successful"></p><h3 id="2-初始化实例"><a href="#2-初始化实例" class="headerlink" title="2.初始化实例"></a>2.初始化实例</h3><p><img src="/courage/images/pasted-195.png" alt="upload successful"></p><h3 id="3-开启外网访问"><a href="#3-开启外网访问" class="headerlink" title="3.开启外网访问"></a>3.开启外网访问</h3><p><img src="/courage/images/pasted-196.png" alt="upload successful"></p><p><img src="/courage/images/pasted-197.png" alt="upload successful"></p><h3 id="4-使用数据管理DMC管理数据库"><a href="#4-使用数据管理DMC管理数据库" class="headerlink" title="4.使用数据管理DMC管理数据库"></a>4.使用数据管理DMC管理数据库</h3><p><img src="/courage/images/pasted-198.png" alt="upload successful"></p><h3 id="5-通过数据管理DMC进入PMA"><a href="#5-通过数据管理DMC进入PMA" class="headerlink" title="5.通过数据管理DMC进入PMA"></a>5.通过数据管理DMC进入PMA</h3><p><img src="/courage/images/pasted-199.png" alt="upload successful"></p><h3 id="6-修改配置连接云数据mysql实例"><a href="#6-修改配置连接云数据mysql实例" class="headerlink" title="6.修改配置连接云数据mysql实例"></a>6.修改配置连接云数据mysql实例</h3><p><img src="/courage/images/pasted-200.png" alt="upload successful"></p><h2 id="4-6-云数据库MongoDB简介"><a href="#4-6-云数据库MongoDB简介" class="headerlink" title="4.6 云数据库MongoDB简介"></a>4.6 云数据库MongoDB简介</h2><p><img src="/courage/images/pasted-201.png" alt="upload successful"></p><p><img src="/courage/images/pasted-202.png" alt="upload successful"></p><h3 id="MongoDB与Mysql的区别"><a href="#MongoDB与Mysql的区别" class="headerlink" title="MongoDB与Mysql的区别"></a>MongoDB与Mysql的区别</h3><p><img src="/courage/images/pasted-203.png" alt="upload successful"></p><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><p><img src="/courage/images/pasted-204.png" alt="upload successful"></p><p><img src="/courage/images/pasted-205.png" alt="upload successful"></p><h2 id="4-7-云数据库MongoDB使用"><a href="#4-7-云数据库MongoDB使用" class="headerlink" title="4.7 云数据库MongoDB使用"></a>4.7 云数据库MongoDB使用</h2><p><img src="/courage/images/pasted-207.png" alt="upload successful"></p><h3 id="1-创建实例"><a href="#1-创建实例" class="headerlink" title="1.创建实例"></a>1.创建实例</h3><p><img src="/courage/images/pasted-208.png" alt="upload successful"></p><h3 id="2-数据迁移"><a href="#2-数据迁移" class="headerlink" title="2.数据迁移"></a>2.数据迁移</h3><p>数据迁移</p><p><img src="/courage/images/pasted-209.png" alt="upload successful"></p><h3 id="3-使用实例"><a href="#3-使用实例" class="headerlink" title="3.使用实例"></a>3.使用实例</h3><p><img src="/courage/images/pasted-210.png" alt="upload successful"></p><h3 id="4-架构的变化"><a href="#4-架构的变化" class="headerlink" title="4.架构的变化"></a>4.架构的变化</h3><p>使用MongoDB保存日志文件</p><p><img src="/courage/images/pasted-211.png" alt="upload successful"></p><h2 id="4-8-云数据库MongoDB整合实验"><a href="#4-8-云数据库MongoDB整合实验" class="headerlink" title="4.8 云数据库MongoDB整合实验"></a>4.8 云数据库MongoDB整合实验</h2><p><img src="/courage/images/pasted-212.png" alt="upload successful"></p><h3 id="1-新建实例"><a href="#1-新建实例" class="headerlink" title="1.新建实例"></a>1.新建实例</h3><p><img src="/courage/images/pasted-213.png" alt="upload successful"></p><h3 id="2-初始化MongoDB实例"><a href="#2-初始化MongoDB实例" class="headerlink" title="2.初始化MongoDB实例"></a>2.初始化MongoDB实例</h3><p><img src="/courage/images/pasted-214.png" alt="upload successful"></p><p><img src="/courage/images/pasted-215.png" alt="upload successful"></p><h3 id="3-把系统的业务日志保存到MongoDB实例中"><a href="#3-把系统的业务日志保存到MongoDB实例中" class="headerlink" title="3.把系统的业务日志保存到MongoDB实例中"></a>3.把系统的业务日志保存到MongoDB实例中</h3><p><img src="/courage/images/pasted-216.png" alt="upload successful"></p><p><img src="/courage/images/pasted-217.png" alt="upload successful"></p><p><img src="/courage/images/pasted-218.png" alt="upload successful"><br>需要在更改完成后将程序打包,然后将其映射到相应的数据库服务器</p><h3 id="4-查看MongoDB中保存的日志信息"><a href="#4-查看MongoDB中保存的日志信息" class="headerlink" title="4.查看MongoDB中保存的日志信息"></a>4.查看MongoDB中保存的日志信息</h3><p><img src="/courage/images/pasted-219.png" alt="upload successful"></p><h2 id="4-9-对象存储COS简介"><a href="#4-9-对象存储COS简介" class="headerlink" title="4.9 对象存储COS简介"></a>4.9 对象存储COS简介</h2><p><img src="/courage/images/pasted-220.png" alt="upload successful"></p><p><img src="/courage/images/pasted-221.png" alt="upload successful"></p><h3 id="对象存储的类型"><a href="#对象存储的类型" class="headerlink" title="对象存储的类型"></a>对象存储的类型</h3><p><img src="/courage/images/pasted-222.png" alt="upload successful"></p><h3 id="存储类型对比"><a href="#存储类型对比" class="headerlink" title="存储类型对比"></a>存储类型对比</h3><p><img src="/courage/images/pasted-223.png" alt="upload successful"></p><h3 id="对象存储各概念关系"><a href="#对象存储各概念关系" class="headerlink" title="对象存储各概念关系"></a>对象存储各概念关系</h3><p><img src="/courage/images/pasted-224.png" alt="upload successful"></p><h2 id="4-10-控制台中使用对象存储的使用步骤"><a href="#4-10-控制台中使用对象存储的使用步骤" class="headerlink" title="4.10 控制台中使用对象存储的使用步骤"></a>4.10 控制台中使用对象存储的使用步骤</h2><p><img src="/courage/images/pasted-225.png" alt="upload successful"></p><h3 id="创建存储桶"><a href="#创建存储桶" class="headerlink" title="创建存储桶"></a>创建存储桶</h3><p><img src="/courage/images/pasted-226.png" alt="upload successful"></p><h3 id="工具概览"><a href="#工具概览" class="headerlink" title="工具概览"></a>工具概览</h3><p><img src="/courage/images/pasted-227.png" alt="upload successful"></p><h2 id="4-11-对象存储API"><a href="#4-11-对象存储API" class="headerlink" title="4.11 对象存储API"></a>4.11 对象存储API</h2><p><img src="/courage/images/pasted-228.png" alt="upload successful"></p><h3 id="术语简介"><a href="#术语简介" class="headerlink" title="术语简介"></a>术语简介</h3><p><img src="/courage/images/pasted-229.png" alt="upload successful"></p><h3 id="service接口"><a href="#service接口" class="headerlink" title="### service接口"></a>### service接口</h3><p><img src="/courage/images/pasted-230.png" alt="upload successful"></p><p><img src="/courage/images/pasted-232.png" alt="upload successful"></p><p><img src="/courage/images/pasted-231.png" alt="upload successful"><br>返回的是XML格式  的数据</p><p><img src="/courage/images/pasted-233.png" alt="upload successful"></p><h3 id="bucket接口"><a href="#bucket接口" class="headerlink" title="bucket接口"></a>bucket接口</h3><p><img src="/courage/images/pasted-234.png" alt="upload successful"></p><h3 id="object接口"><a href="#object接口" class="headerlink" title="object接口"></a>object接口</h3><p><img src="/courage/images/pasted-235.png" alt="upload successful"></p><h2 id="4-12-SDK操作对象存储"><a href="#4-12-SDK操作对象存储" class="headerlink" title="4.12 SDK操作对象存储"></a>4.12 SDK操作对象存储</h2><p><img src="/courage/images/pasted-236.png" alt="upload successful"></p><h3 id="Java-SDK访问"><a href="#Java-SDK访问" class="headerlink" title="Java SDK访问"></a>Java SDK访问</h3><p><img src="/courage/images/pasted-237.png" alt="upload successful"></p><p><img src="/courage/images/pasted-238.png" alt="upload successful"></p><h3 id="引入cos存储后架构的变化"><a href="#引入cos存储后架构的变化" class="headerlink" title="引入cos存储后架构的变化"></a>引入cos存储后架构的变化</h3><p><img src="/courage/images/pasted-239.png" alt="upload successful"></p><h2 id="4-13-对象存储整合实验"><a href="#4-13-对象存储整合实验" class="headerlink" title="4.13 对象存储整合实验"></a>4.13 对象存储整合实验</h2><p><img src="/courage/images/pasted-240.png" alt="upload successful"></p><h3 id="1-创建存储桶"><a href="#1-创建存储桶" class="headerlink" title="1.创建存储桶"></a>1.创建存储桶</h3><p><img src="/courage/images/pasted-241.png" alt="upload successful"></p><h3 id="2-新建访问密钥"><a href="#2-新建访问密钥" class="headerlink" title="2.新建访问密钥"></a>2.新建访问密钥</h3><p><img src="/courage/images/pasted-242.png" alt="upload successful"></p><p><img src="/courage/images/pasted-243.png" alt="upload successful"></p><h3 id="3-修改cos存储配置内容"><a href="#3-修改cos存储配置内容" class="headerlink" title="3.修改cos存储配置内容"></a>3.修改cos存储配置内容</h3><p><img src="/courage/images/pasted-244.png" alt="upload successful"></p><p><img src="/courage/images/pasted-245.png" alt="upload successful"><br>需要在更改完成后将程序打包,然后将其映射到相应的数据库服务器</p><h3 id="4-上传文件信息"><a href="#4-上传文件信息" class="headerlink" title="4.上传文件信息"></a>4.上传文件信息</h3><p><img src="/courage/images/pasted-246.png" alt="upload successful"></p>]]></content>
      
      
      <categories>
          
          <category> 腾讯云开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 腾讯云开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客首次启动</title>
      <link href="/courage/posts/06aa2b5650ce/"/>
      <url>/courage/posts/06aa2b5650ce/</url>
      
        <content type="html"><![CDATA[<p>这是一篇首次部署hexo博客框架的文章</p><span id="more"></span><h2 id="思想斗争"><a href="#思想斗争" class="headerlink" title="思想斗争"></a>思想斗争</h2><p>暑期来临，自己就很想利用暑期的时间部署一个属于自己的个人博客。<br>首先我自己是想到了用前端框架和后端框架自己写一个博客出来，最后自己搭一个服务器什么的。但是写到一半之后仔细想了想后期这个博客站点运行的问题，总感觉整个博客的运行成本有点超出我的预期。<br>虽然以学生身份在腾讯云或者阿里云的平台上买服务器是可以享受到优惠的，但是优惠终归有期限，超过期限之后就得原价续费，还不包括后期维护或者续费服务器运行费用的相关问题。<br>毕竟博客还是得要一直部署在公网上才有意义。<br>所以我开始了追求极致性价比的道路。<br>在b站冲浪两个半小时之后，我看到hexo框架。<br>hexo博客框架当下也算是比较流行的博客框架的一种，相较于halo等动态博客框架不同，hexo博客框架是静态的。<br>虽然看上去逼格不够高，但是能用就行。<br>hexo框架只需要在本地部署完成，然后将工程文件利用git推送到远端，例如github或者gitee中后，就可以使用它们所提供的page功能完成线上部署，并可以直接在公网上访问到自己的博客网站了。<br><img src="/courage/images/pasted-0.png" alt="upload successful"></p><h2 id="部署hexo系统"><a href="#部署hexo系统" class="headerlink" title="部署hexo系统"></a>部署hexo系统</h2><h3 id="1-前置步骤"><a href="#1-前置步骤" class="headerlink" title="1.前置步骤"></a>1.前置步骤</h3><p>在部署hexo系统之前，需要先安装node.js，我们需要使用node.js中的包管理器npm对hexo博客框架进行安装。node.js版本直接跟着教程安装最新版本就好。<br>官网： <a href="https://nodejs.org/">https://nodejs.org/</a></p><h3 id="2-开始部署"><a href="#2-开始部署" class="headerlink" title="2.开始部署"></a>2.开始部署</h3><p>安装完成node.js后，我们使用以下命令全局安装hexo:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g  </span><br></pre></td></tr></table></figure><p>接着如果你是Windos用户，就可以自己创建一个专门放置hexo博客的文件夹，之后在此文件夹的文件路径框中输入cmd即可让cmd命令行窗口进入当前文件路径下。<br>linux用户和mac用户的操作相似，此处不再赘述。<br>之后，在命令行窗口输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>等待安装完成后，即可使用<br>在本地启动hexo博客框架的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>如果你更改了博客框架中的某些内容，需要先清除掉原来框架中的缓存，如以下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean </span><br></pre></td></tr></table></figure><p>然后重新生成渲染网页文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>之后在使用启动hexo框架的命令之后，就可以看到自己想要的效果了</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
